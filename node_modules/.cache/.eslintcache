[{"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\index.js":"1","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\App.js":"2","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Footer.js":"3","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Visual.js":"4","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Header.js":"5","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Department.js":"6","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Community.js":"7","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Gallery.js":"8","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Location.js":"9","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Youtube.js":"10","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Member.js":"11","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Layout.js":"12","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Popup.js":"13","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Main.js":"14","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Pics.js":"15","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\News.js":"16","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Vids.js":"17"},{"size":227,"mtime":1665625886602,"results":"18","hashOfConfig":"19"},{"size":1175,"mtime":1666161279249,"results":"20","hashOfConfig":"19"},{"size":243,"mtime":1665632267497,"results":"21","hashOfConfig":"19"},{"size":147,"mtime":1666161853715,"results":"22","hashOfConfig":"19"},{"size":1657,"mtime":1666139870666,"results":"23","hashOfConfig":"19"},{"size":852,"mtime":1665728775837,"results":"24","hashOfConfig":"19"},{"size":7464,"mtime":1666159538148,"results":"25","hashOfConfig":"19"},{"size":173,"mtime":1665645380218,"results":"26","hashOfConfig":"19"},{"size":5560,"mtime":1665989305972,"results":"27","hashOfConfig":"19"},{"size":1906,"mtime":1665732696241,"results":"28","hashOfConfig":"19"},{"size":10854,"mtime":1666074373621,"results":"29","hashOfConfig":"19"},{"size":1271,"mtime":1665714342852,"results":"30","hashOfConfig":"19"},{"size":439,"mtime":1665731933960,"results":"31","hashOfConfig":"19"},{"size":334,"mtime":1666161034342,"results":"32","hashOfConfig":"19"},{"size":117,"mtime":1666161781000,"results":"33","hashOfConfig":"19"},{"size":117,"mtime":1666161629416,"results":"34","hashOfConfig":"19"},{"size":117,"mtime":1666161679788,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"v0ax86",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\index.js",[],[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\App.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Footer.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Visual.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Header.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Department.js",["93"],[],"import Layout from \"../common/Layout\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Department() {\r\n  const path = process.env.PUBLIC_URL;\r\n  const [Members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${path}/DB/members.json`).then((json) => {\r\n      setMembers(json.data.members);\r\n    })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Layout name={'Department'}>\r\n      {Members.map((data,index) => {\r\n        return(\r\n          <article key={index}>\r\n            <div className=\"inner\">\r\n              <div className=\"pic\">\r\n                <img src={`${path}/img/${data.pic}`} alt={data.name} />\r\n              </div>\r\n              <h3>{data.name}</h3>\r\n              <p>{data.position}</p>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n\r\n\r\n    </Layout>\r\n  )\r\n}","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Community.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Gallery.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Location.js",["94","95"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport Layout from \"../common/Layout\"\r\n\r\nexport default function Location() {\r\n\r\n  const { kakao } = window;\r\n  // 윈도우 객체에 등록되어 있는 카카오키를 변수명으로 비구조화할당을 한것.\r\n  // 윈도우 객체가 카카오 객체를 사용할 수 있도록 하는 코드.\r\n  // const kakao = (window).kakao;\r\n\r\n  const info = [\r\n    {\r\n      title: '삼성동 코엑스',\r\n      latlng: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker1.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n    {\r\n      title: '올림픽 공원',\r\n      latlng: new kakao.maps.LatLng(37.5206868, 127.1214941),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker2.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n    {\r\n      title: '서울 시청',\r\n      latlng: new kakao.maps.LatLng(37.5657037, 126.9768616),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker3.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  // 리얼돔에서 참조하는 방법으로 querySelector 등의 방법은 가상돔인 리액트에서는 사용할 수 없다. 그래서 리액트에서는 useRef라는 훅을 이용해서 가상으로 생성된 DOM을 이용할 수 있다.\r\n  const container = useRef(null);\r\n  // useRef를 이용해서 가상돔을 참조할 변수로 컨테이너를 생성한 뒤, null 값으로 빈 구역을 만들어둠.\r\n  const btns = useRef(null);\r\n\r\n  const [Location, setLocation] = useState(null);\r\n  // useEffect에서 만들어진 지도 인스턴스를 담을 state를 생성하는 것\r\n\r\n  const [Traffic, setTraffic] = useState(false);\r\n  // Traffic 토글 기능 구현을 위한 state를 추가, 불린값을 부여한다.\r\n\r\n  const [Info] = useState(info);\r\n  // setInfo는 info가 바뀔 일이 없으므로 필요가 없다.\r\n\r\n  const [Index, setIndex] = useState(0);\r\n  // 인덱스가 변화될 때 렌더링이 필요하므로 useState에 담아 관리한다.\r\n  \r\n  const option = { //지도를 생성할 때 필요한 기본 옵션\r\n    center: Info[Index].latlng, //지도의 중심좌표.\r\n    level: 3 //지도의 레벨(확대, 축소 정도)\r\n  };\r\n  const markerPosition  = Info[Index].latlng; // 마커위치 인스턴스 생성\r\n  const imageSrc = Info[Index].imgUrl;\r\n  const imageSize = Info[Index].imgSize;\r\n  const imageOption = Info[Index].imgPos;\r\n  // 마커 이미지 변경에 필요한 정보값 3개를 등록\r\n\r\n  const markerImage = new kakao.maps.MarkerImage(\r\n    imageSrc,\r\n    imageSize,\r\n    imageOption\r\n  );\r\n\r\n  const marker = new kakao.maps.Marker({\r\n    position: markerPosition,\r\n    image: markerImage\r\n  });\r\n  // 위치 인스턴스 값을 인수로 전달해서 다시 마커 인스턴스 생성\r\n\r\n  \r\n  useEffect(() => {\r\n    container.current.innerHTML = '';\r\n\r\n    // 지도 인스턴스 최종생성\r\n    const map_instance = new kakao.maps.Map(container.current, option); //지도 인스턴스를 활용해서 마커를 생성하는 코드\r\n    marker.setMap(map_instance);\r\n    setLocation(map_instance);\r\n\r\n    const mapTypeControl = new kakao.maps.MapTypeControl();\r\n    map_instance.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    const zoomControl = new kakao.maps.ZoomControl();\r\n    map_instance.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    for(const btn of btns.current.children) btn.classList.remove('on');\r\n    btns.current.children[Index].classList.add('on');\r\n\r\n\r\n    window.addEventListener('resize', () => {\r\n      map_instance.setCenter(Info[Index].latlng);\r\n    })\r\n  }, [Index]); // <-- 기존 컴포넌트가 처음 마운트 되었을 때만 지도를 출력하던 방식에서, Index가 변경될 때 지도가 다시 렌더링 하는 방식으로 바꿈.\r\n\r\n\r\n  // 트래픽 토글 전용 useEffect \r\n  useEffect(() => {\r\n    if(!Location) return;\r\n    // Location state의 값은 두번째 호출부터 값이 담겨 사이클이 돌아가므로 처음 값이 존재하지 않는 초기 오류방지를 위해 조건문 처리함.\r\n\r\n    // 트레픽 값에 따라서 생성과 삭제로 나누어서 코드를 제공, 구현.\r\n    Traffic \r\n    ? Location.addOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC)\r\n    : Location.removeOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC) \r\n\r\n  }, [Traffic]); // traffic state의 값이 변경될 때마다 실행이 되는 구문.\r\n\r\n\r\n  return (\r\n    <Layout name={'Location'}>\r\n      <div id=\"map\" ref={container}></div>\r\n\r\n      <div className=\"btnSet\">\r\n\r\n      {/* 기존의 두개의 버튼에서 한개의 토글 버튼으로 바꿈.\r\n          버튼 클릭시 트래픽 값을 반전처리 => !Traffic\r\n      */}\r\n        <button onClick={() => { setTraffic(!Traffic) }\r\n        }>\r\n          {/* Traffic의 값에 따라서 버튼의 내용도 변경 */}\r\n        { Traffic ? 'Traffic OFF' : 'Traffic ON'}\r\n      </button>\r\n\r\n        <ul className=\"branch\" ref={btns}>\r\n          {/* 각 버튼을 클릭할 때마다 Index의 값을 변경 */}\r\n          {\r\n            Info.map((el, idx) => {\r\n              return(\r\n                <li key={idx} onClick={() => setIndex(idx)}>\r\n                  {el.title}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n\r\n\r\n    </Layout>\r\n  );\r\n}","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Youtube.js",["96"],[],"import Layout from \"../common/Layout\"\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Popup from \"../common/Popup\";\r\n\r\nexport default function Youtube() {\r\n\r\n\r\n  const [Vids, setVids] = useState([]);\r\n  const [Open, setOpen] = useState(false);\r\n  const [Index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const key = 'AIzaSyCtN1lqIIdi7ibHkYVCtVtP9vA4oz8j8n8';\r\n    const playList = 'PLlXUbM-Wv86W_pA2wzZgQ7pF1VeHP6At4';\r\n    const num = 6; // 재생목록의 불러올 비디오 갯수\r\n    const url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&key=${key}&playlistId=${playList}&maxResults=${num}`;\r\n\r\n    axios.get(url).then((json) => {\r\n      console.log(json.data);\r\n      setVids(json.data.items);\r\n    })\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Layout name={'Youtube'}>\r\n\r\n          {Vids.map((data,index) => {\r\n\r\n          const tit = data.snippet.title;\r\n          const desc = data.snippet.description;\r\n          const date = data.snippet.publishedAt;\r\n\r\n          return(\r\n            <article key={index}>\r\n              <h3>{tit.length > 30 ? tit.substr(0, 30) + '...' : tit}</h3>\r\n              <div className=\"txt\">\r\n                <p>{desc.length > 100 ? desc.substr(0, 100) : desc}</p>\r\n                <span>{date.split('T')[0]}</span>\r\n              </div>\r\n              <div className=\"pic\" onClick={() => { \r\n              setOpen(true)\r\n              setIndex(index)\r\n              }}>\r\n                <img \r\n                  src={data.snippet.thumbnails.standard.url} \r\n                  alt={data.snippet.title} />\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n\r\n      </Layout>\r\n      {Open && <Popup setOpen={setOpen}>\r\n          <iframe src={`https://www.youtube.com/embed/${Vids[Index].snippet.resourceId.videoId}`} frameBorder='0'></iframe>\r\n        </Popup>}\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Member.js",["97"],[],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Layout from '../common/Layout';\r\n\r\nfunction Member() {\r\n  const history = useHistory();\r\n  /**\r\n  useHistory는 URL 주소를 변경할 때 사용하는 hook이다.\r\n  리액트 특성상, url 변경없이 내부 컴포넌트만 변경시켜 화면을 바꿔줄 수 있다. 하지만 url을 바꿔주면 현재 어느 페이지에 있는지 사용자가 대략적으로 알 수 있다. url주소 변경없이 컴포넌트의 변경만으로도 사용자가 웹페이지를 이용할 수 있지만, 복잡한 순서와 사용자 경험을 개선하기 위해 핵심 컴포넌트들이 변경될 때 url을 같이 변경시켜주면 \"사용자 친화적인 페이지\"가 될 수 있다. \r\n\r\n  useHistory는 사용하기 위해서 리액트 라우터 돔을 사용해야한다. \r\n  라우터의 버전이 5인 경우가 useHistory이고, 라우터 버전이 6인 경우에는 useNavigate로 이름이 바뀌었다. \r\n\r\n  */\r\n\r\n  // userid의 입력값이 담길 초기 state를 객체로 지정\r\n  const initVal = {\r\n    userid: '',\r\n    email: '',\r\n    pwd1: '',\r\n    pwd2: '',\r\n    comments: '',\r\n    edu: '',\r\n    gender: null,\r\n    interests: null,\r\n  };\r\n  // 해당 객체 값을 state에 초기값으로 저장\r\n  const [Val, setVal] = useState(initVal);\r\n\r\n  const [Err, setErr] = useState({});\r\n\r\n  const [Submit, setSubmit] = useState(false);\r\n\r\n  const check = (value) => {\r\n    const errs = {};\r\n\r\n    const eng = /[a-zA-Z]/;\r\n    const num = /[0-9]/;\r\n    const spc = /[~!@#$%^&*()_+]/;\r\n\r\n    if(value.userid.length < 5) {\r\n      errs.userid = '아이디를 5글자 이상 입력하세요'\r\n    }\r\n    // email 인증은 8글자 이상, @가 있어야 한다.\r\n    if(value.email.length < 8 || !/@/.test(Val.email)) {\r\n      errs.email = '이메일은 8글자 이상 @를 포함하세요'\r\n    }\r\n    if(value.pwd1 < 5 ||\r\n      !eng.test(value.pwd1) ||\r\n      !num.test(value.pwd1) ||\r\n      !spc.test(value.pwd1)\r\n      // 5글자 보다 작으면 참이므로 이후의 것은 판단하지 않고 밑으로 내려가서 에러메세지를 출력. 거짓이면 ||을 넘어가서 영어글자수를 물어보는 것. 영어글자가 없으면 참이므로 밑에 에러메세지가 있으면? 거짓이므로 ||을 넘어감. 이렇게 모두 거짓이어야 에러메세지가 없이 통과한다.\r\n      ) {\r\n        errs.pwd1 = '비밀번호는 5글자 이상, 영문, 숫자, 특수문자를 모두 포함하세요';\r\n      }\r\n      if(value.pwd1 !== value.pwd2 || value.pwd2 < 5) {\r\n        errs.pwd2 = '두개의 비밀번호를 동일하게 입력하세요';\r\n      }\r\n      if(!Val.gender) {\r\n        errs.gender = '성별을 선택하세요';\r\n      }\r\n      if(!Val.interests) {\r\n        errs.interests = '관심사를 하나 이상 선택하세요';\r\n      }\r\n      if(Val.comments.length < 20) {\r\n        errs.comments = '남기는 말을 20글자 이상 입력하세요';\r\n      }\r\n      if(Val.edu === '') {\r\n        errs.edu = '최종학력을 선택하세요';\r\n      }\r\n\r\n    return errs;\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    // 순서2. 입력하고 있는 인풋요소의 네임, 벨류값을 변수로 비구조화 할당\r\n    const { name, value } = e.target;\r\n    // 순서3. 비구조화 할당으로 받은 값을 Val state에 저장하고\r\n    // 순서4. setVal함수가 렌더링해서 우리가 볼 수 있도록 함.\r\n    setVal({ ...Val, [name]: value });\r\n  }\r\n\r\n  const handleRadio = (e) => {\r\n    const {name} = e.target;\r\n    const isChecked = e.target.checked;\r\n    setVal({...Val, [name]: isChecked})\r\n  }\r\n\r\n  const handleSelect = (e) => {\r\n    const {name} = e.target;\r\n    const isSelected = e.target.value;\r\n    setVal({...Val, [name]: isSelected });\r\n  }\r\n\r\n  const handleCheck = (e) => {\r\n    let isChecked = false;\r\n    const { name } = e.target;\r\n    const inputs = e.target.parentElement.querySelectorAll('input');\r\n    inputs.forEach((el) => {\r\n      if(el.checked) isChecked = true;\r\n    });\r\n    setVal({...Val, [name]: isChecked });\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSubmit(false);\r\n    setErr({});\r\n    setVal(initVal);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    // 순서6. 서버 전송 이동을 막아줘야한다. a태그가 아니어도 submit 자체가 가지는 속성을 막는다.\r\n    e.preventDefault();\r\n    // 순서7. Val state값을 인수로 전달해서 check함수에서 인증검사 시작 <={ check(Val) }\r\n    setErr(check(Val));\r\n    // 순서8. 인증검사 결과 errs가 존재한다면 반환된 에러 객체를 Err state에 옮겨담음.\r\n  };\r\n\r\n  useEffect(() => {\r\n    const len = Object.keys(Err).length;\r\n    if(len === 0 && Submit) {\r\n      alert('회원가입이 완료되었습니다. 메인페이지로 이동합니다.');\r\n      history.push('/youtube');\r\n    }\r\n  }, [Err]);\r\n\r\n\r\n  return(\r\n    <Layout name={'Member'}>\r\n      {/* 순서5. 전송버튼 클릭시 핸들 서브밋 함수를 호출 */}\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <legend className='h'>회원가입 폼 양식</legend>\r\n          <table border='1'>\r\n            <caption className='h'>회원가입 정보입력</caption>\r\n            <tbody>\r\n              {/* user id */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"userid\">USER ID</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"text\"\r\n                        placeholder='아이디를 입력하세요'\r\n                        name='userid'\r\n                        id='userid'\r\n                              \r\n                              value={Val.userid}\r\n                              onChange={handleChange}\r\n                              // 순서1. 인풋에 값을 입력시 핸들체인지 함수가 호출\r\n                  />\r\n                  {/* 순서9. 혹시 에러가 있으면 err정보값을 화면에 출력 */}\r\n                  <span className='err'>{Err.userid}</span>\r\n                </td>\r\n              </tr>\r\n              {/* password */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"pwd1\">PASSWORD</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"password\" name='pwd1' id='pwd1' placeholder='비밀번호를 입력하세요' onChange={handleChange} />\r\n                  <span className='err'>{Err.pwd1}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"pwd2\">PASSWORD</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"password\" name='pwd2' id='pwd2' placeholder='비밀번호를 재입력하세요' onChange={handleChange} />\r\n                  <span className='err'>{Err.pwd2}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* email */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"email\">E-MAIL</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"text\"\r\n                          id='email'\r\n                          name='email'\r\n                          placeholder='이메일 주소를 입력하세요'\r\n                          value={Val.email}\r\n                          onChange={handleChange}\r\n                  />\r\n                  <span className='err'>{Err.email}</span>\r\n                </td>\r\n              </tr>\r\n              {/* edu */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"edu\">EDUCATION</label>\r\n                </th>\r\n                <td>\r\n                  <select name=\"edu\" id=\"edu\" onChange={handleSelect}>\r\n                    <option value=\"\">학력을 선택하세요</option>\r\n                    <option value=\"elementary\">초등학교 졸업</option>\r\n                    <option value=\"middle\">중학교 졸업</option>\r\n                    <option value=\"high\">고등학교 졸업</option>\r\n                    <option value=\"college\">대학교 졸업</option>\r\n                  </select>\r\n                  <span className='err'>{Err.edu}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* gender */}\r\n              <tr>\r\n                <th scope='row'>GENDER</th>\r\n                <td>\r\n                  <label htmlFor=\"male\">MALE</label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name='gender' \r\n                  id='male'\r\n                  onChange={handleRadio} \r\n                  />\r\n                  <label htmlFor=\"female\">FEMALE</label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name='gender' \r\n                  id='female'\r\n                  onChange={handleRadio}  \r\n                  />\r\n                  <span className='err'>{Err.gender}</span>\r\n                </td>\r\n              </tr>\r\n              {/* check box */}\r\n              <tr>\r\n                <th scope='row'>INTERESTS</th>\r\n                <td>\r\n                  <label htmlFor=\"sports\">SPORTS</label>\r\n                  <input type=\"checkbox\" name='interests' id='sports' onChange={ handleCheck } />\r\n                  <label htmlFor=\"music\">MUSIC</label>\r\n                  <input type=\"checkbox\" name='interests' id='music' onChange={ handleCheck } />\r\n                  <label htmlFor=\"game\">GAME</label>\r\n                  <input type=\"checkbox\" name='interests' id='game' onChange={ handleCheck } />\r\n                  <span className=\"err\">{Err.interests}</span>\r\n                </td>\r\n              </tr>\r\n              {/* comments */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"comments\">COMMENTS</label>\r\n                </th>\r\n                <td>\r\n                  <textarea \r\n                  name=\"comments\" \r\n                  id=\"comments\" \r\n                  cols=\"30\" \r\n                  rows=\"5\"\r\n                  value={Val.comments}\r\n                  onChange={handleChange}\r\n                  ></textarea>\r\n                  <span className=\"err\">{Err.comments}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* btn set */}\r\n              <tr>\r\n                <th colSpan='2'>\r\n                  <input \r\n                  type=\"reset\" \r\n                  value=\"CANCLE\"\r\n                  onClick={handleReset}\r\n                  />\r\n                  <input \r\n                  type=\"submit\" \r\n                  value=\"SEND\"\r\n                  onClick={() => setSubmit(true)} \r\n                  />\r\n                  </th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </fieldset>\r\n      </form>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Member;",[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Layout.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Popup.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Main.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Pics.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\News.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Vids.js",[],[],{"ruleId":"98","severity":1,"message":"99","line":13,"column":6,"nodeType":"100","endLine":13,"endColumn":8,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":98,"column":6,"nodeType":"100","endLine":98,"endColumn":13,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"104","line":111,"column":6,"nodeType":"100","endLine":111,"endColumn":15,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":56,"column":11,"nodeType":"108","endLine":56,"endColumn":115},{"ruleId":"98","severity":1,"message":"109","line":126,"column":6,"nodeType":"100","endLine":126,"endColumn":11,"suggestions":"110"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'Info', 'kakao.maps.ControlPosition.RIGHT', 'kakao.maps.ControlPosition.TOPRIGHT', 'kakao.maps.Map', 'kakao.maps.MapTypeControl', 'kakao.maps.ZoomControl', 'marker', and 'option'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'Location' and 'kakao.maps.MapTypeId.TRAFFIC'. Either include them or remove the dependency array.",["113"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'Submit' and 'history'. Either include them or remove the dependency array.",["114"],{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [path]",{"range":"123","text":"124"},"Update the dependencies array to be: [Index, Info, kakao.maps.ControlPosition.RIGHT, kakao.maps.ControlPosition.TOPRIGHT, kakao.maps.Map, kakao.maps.MapTypeControl, kakao.maps.ZoomControl, marker, option]",{"range":"125","text":"126"},"Update the dependencies array to be: [Location, Traffic, kakao.maps.MapTypeId.TRAFFIC]",{"range":"127","text":"128"},"Update the dependencies array to be: [Err, Submit, history]",{"range":"129","text":"130"},[376,378],"[path]",[3113,3120],"[Index, Info, kakao.maps.ControlPosition.RIGHT, kakao.maps.ControlPosition.TOPRIGHT, kakao.maps.Map, kakao.maps.MapTypeControl, kakao.maps.ZoomControl, marker, option]",[3575,3584],"[Location, Traffic, kakao.maps.MapTypeId.TRAFFIC]",[3586,3591],"[Err, Submit, history]"]