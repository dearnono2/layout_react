[{"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\index.js":"1","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\App.js":"2","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Footer.js":"3","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Visual.js":"4","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Header.js":"5","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Department.js":"6","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Community.js":"7","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Gallery.js":"8","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Location.js":"9","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Youtube.js":"10","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Member.js":"11","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Layout.js":"12","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Popup.js":"13","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Main.js":"14","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Pics.js":"15","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\News.js":"16","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Vids.js":"17","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\asset\\anime.js":"18","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\asset\\Anime.js":"19","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Btns.js":"20"},{"size":227,"mtime":1665625886602,"results":"21","hashOfConfig":"22"},{"size":1179,"mtime":1666425166794,"results":"23","hashOfConfig":"22"},{"size":243,"mtime":1665632267497,"results":"24","hashOfConfig":"22"},{"size":491,"mtime":1666234346788,"results":"25","hashOfConfig":"22"},{"size":1657,"mtime":1666139870666,"results":"26","hashOfConfig":"22"},{"size":852,"mtime":1665728775837,"results":"27","hashOfConfig":"22"},{"size":7001,"mtime":1666225299533,"results":"28","hashOfConfig":"22"},{"size":7834,"mtime":1666668309038,"results":"29","hashOfConfig":"22"},{"size":5560,"mtime":1665989305972,"results":"30","hashOfConfig":"22"},{"size":1941,"mtime":1666673921347,"results":"31","hashOfConfig":"22"},{"size":10854,"mtime":1666074373621,"results":"32","hashOfConfig":"22"},{"size":1271,"mtime":1665714342852,"results":"33","hashOfConfig":"22"},{"size":2472,"mtime":1666749101895,"results":"34","hashOfConfig":"22"},{"size":2128,"mtime":1666279124224,"results":"35","hashOfConfig":"22"},{"size":664,"mtime":1666573896293,"results":"36","hashOfConfig":"22"},{"size":1239,"mtime":1666233986182,"results":"37","hashOfConfig":"22"},{"size":1068,"mtime":1666666272719,"results":"38","hashOfConfig":"22"},{"size":1937,"mtime":1666230646315,"results":"39","hashOfConfig":"22"},{"size":1937,"mtime":1666230646315,"results":"40","hashOfConfig":"22"},{"size":313,"mtime":1666233721923,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"v0ax86",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"45"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\index.js",[],[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\App.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Footer.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Visual.js",["114"],[],"import Anime from '../../asset/Anime';\r\nimport React, { useRef } from \"react\"\r\n\r\n\r\nconst btn = {\r\n  position: 'absolute',\r\n  top: 120,\r\n  left: 100,\r\n}\r\n\r\nexport default function Visual() {\r\n\r\n\r\n  return (\r\n    <figure id=\"visual\" className='myScroll'>\r\n      <button\r\n      style={btn}\r\n      onClick={() => {\r\n        new Anime(window, {\r\n          prop: 'scroll',\r\n          value: 6000,\r\n          duration: 500,\r\n        })\r\n      }}\r\n\r\n      >button</button>\r\n\r\n    </figure>\r\n  )\r\n}\r\n","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Header.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Department.js",["115"],[],"import Layout from \"../common/Layout\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Department() {\r\n  const path = process.env.PUBLIC_URL;\r\n  const [Members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${path}/DB/members.json`).then((json) => {\r\n      setMembers(json.data.members);\r\n    })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Layout name={'Department'}>\r\n      {Members.map((data,index) => {\r\n        return(\r\n          <article key={index}>\r\n            <div className=\"inner\">\r\n              <div className=\"pic\">\r\n                <img src={`${path}/img/${data.pic}`} alt={data.name} />\r\n              </div>\r\n              <h3>{data.name}</h3>\r\n              <p>{data.position}</p>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n\r\n\r\n    </Layout>\r\n  )\r\n}","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Community.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Gallery.js",["116","117"],[],"import Layout from \"../common/Layout\";\r\nimport Popup from \"../common/Popup\";\r\nimport axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\n\r\nexport default function Gallery() {\r\n  const masonryOptions = { transitionDuration: '0.5s' };\r\n  const [Items, setItems] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [EnableClick, setEnableClick] = useState(true);\r\n  const [Index, setIndex] = useState(0);\r\n  const frame = useRef(null);\r\n  const input = useRef(null);\r\n  const pop = useRef(null);\r\n\r\n    /*\r\n  interest 방식 호출\r\n  getFlickr({\r\n    type: 'interest',\r\n  })\r\n  search 방식 버튼\r\n  getFlickr({\r\n    type:'search',\r\n    tags: '검색키워드',\r\n  })\r\n  */\r\n\r\n  const getFlickr = async (opt) => {\r\n    const key = '2b77b0bf16caab8d0940ed8495c064dc';\r\n    const method_interest = 'flickr.interestingness.getList';\r\n    const method_search = 'flickr.photos.search';\r\n    const method_user ='flickr.people.getPhotos';\r\n    const num = 20;  // 깨질 수 있으니 사진은 40장 아래로\r\n    let url = '';\r\n\r\n    if (opt.type === 'interest') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\r\n  }\r\n    if (opt.type === 'search') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&tags=${opt.tags}`;\r\n    }\r\n\r\n    if (opt.type === 'user') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${opt.user}`;\r\n    }\r\n\r\n    // await axios.get(url).then((json) => {\r\n    //   setItems(result.data.photos.photo);\r\n    // })\r\n\r\n    const result = await axios.get(url);\r\n    if (result.data.photos.photo.length === 0) return alert('해당 검색어의 결과 이미지가 없습니다');\r\n    setItems(result.data.photos.photo);\r\n    \r\n    // 셋타임아웃으로 비동기화 시키고 1초 딜레이를 준 뒤 로딩바를 안보이게 false로 바꾼 뒤에 on을 프레임에 붙여서 보이게한다.\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      frame.current.classList.add('on');\r\n\r\n      setTimeout(() => {\r\n        setEnableClick(true);\r\n      }, 500) // 프레임에 on 붙이고 위로 올라오는 모션기간동안 0.5초 홀딩\r\n\r\n    }, 1000) // 이미지 호출이 완료되고 masonry모션 적용시간까지 홀딩하는 1초\r\n\r\n  };\r\n\r\n  useEffect(() => getFlickr({ type: 'user', user: '196712274@N08' }), []); // 초기화면. 초반에 나타나는 이미지를 유저 자신의 이미지로 했다.\r\n  //함수의 정의 형태로 콜백함수가 들어와야 한다, 함수를 단순 호출하는 형태는 읽어들일 수 없다\r\n  const showSearch = () => {\r\n    const result = input.current.value.trim();\r\n    input.current.value = '';\r\n\r\n    if(!result) return alert('검색어를 입력하세요');\r\n\r\n    if(!EnableClick) return;\r\n    setEnableClick(false);\r\n    setLoading(true);\r\n    frame.current.classList.remove('on');\r\n    getFlickr({ type: 'search', tags: result, });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout name={'Gallery'}>\r\n        {Loading && (\r\n          <img\r\n            className=\"loading\"\r\n            src={`${process.env.PUBLIC_URL}/img/6.gif`}\r\n          />\r\n        )}\r\n\r\n        <div className=\"controls\">\r\n          <nav>\r\n            <button\r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                // 모션중이면 false일태나 return으로 방지\r\n                setEnableClick(false);\r\n                // true로 들어와서 다시 false로 바꾸어 재이벤트 방지\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'interest' });\r\n              }}>\r\n                Interest Gallery\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                setEnableClick(false);\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'search', tags: 'landscape' }); // 내 갤러리로 보이게 하고싶으면 tags에 landscape 대신 196712274@N08 를 넣어준다.\r\n              }}>\r\n                Search Gallery\r\n            </button>\r\n          </nav>\r\n          <div className=\"searchBox\">\r\n            <input type=\"text\" ref={input} placeholder='검색어를 입력하세요' onKeyUp={(e) => {\r\n              if(e.key === 'Enter') showSearch();\r\n            }} />\r\n            <button \r\n              onClick={showSearch}>\r\n                Search \r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"frame\" ref={frame}>\r\n          <Masonry elementType={'div'} options={masonryOptions}>\r\n\r\n            {Items.map((item, idx) => {\r\n              return (\r\n                <article key={idx}>\r\n                  <div className=\"inner\">\r\n                    <div className=\"pic\" onClick={() => {\r\n                      pop.current.open();\r\n                      setIndex(idx);\r\n                    }}>\r\n                      {/* 여기서부터 다시 보고 작성하자... */}\r\n                      <img \r\n                        src={`https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}_m.jpg`} \r\n                        alt={item.title} />\r\n                    </div>\r\n                    <h2>{item.title}</h2>\r\n\r\n                    <div className=\"profile\">\r\n                      <img src={`http://farm${item.farm}.staticflickr.com/${item.server}/buddyicons/${item.owner}.jpg`} alt={item.owner}\r\n                        onError={(e) => {\r\n                          e.target.setAttribute(\r\n                            'src',\r\n                            'https://www.flickr.com/images/buddyicon.gif'\r\n                          );\r\n                        }}\r\n                      />\r\n                      <span onClick={(e) => {\r\n                        if(!EnableClick) return;\r\n                        setEnableClick(false);\r\n                        setLoading(true);\r\n                        frame.current.classList.remove('on');\r\n                        getFlickr({ type: 'user', user: e.target.innerText });\r\n                      }}\r\n                      >{item.owner}</span>\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n              )\r\n            })}\r\n          </Masonry>\r\n        </div>\r\n      </Layout>\r\n    \r\n      <Popup ref={pop}>\r\n        {Items.length !== 0 && (\r\n        <img\r\n          src={`https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`}\r\n          alt={Items[Index].title} />\r\n        )}\r\n      </Popup>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n/*\r\n\r\n? 형태는 쿼리스트링하는 형태의 방법이다. \r\n쿼리 스트링은 ??\r\n\r\n사용자가 입력 데이터를 전달하는 방법중의 하나로 url 주소에 미리 협의된 데이터를 파라미터를 통해 넘기는 것을 말한다. \r\n파라미터는 물음표 뒤에 = 으로 연결된 key value 부분을 말한다. \r\nurl에 붙여서 추가적인 정보를 서버측에 전달하는 내용이다. \r\n클라이언트가 어떤 특정 리소스에 접근하고 싶어하는지의 정보를 담는것. \r\n\r\n형식(방법)\r\n- 정해진 엔드포인트 주소 이후에 ?를 쓰는 것으로 쿼리스트링이 시작함을 알린다. \r\n- parameter = value로 필요한 파라미터의 값을 적는다. \r\n- 파라미터가 여러개일 경우 &를 붙여서 여러개의 파라미터를 넘길 수 있다. \r\n- 엔드포인트주소/ 추가적인주소 ? 파라미터=값&파라미터=값\r\n\r\n*/","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Location.js",["118","119"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport Layout from \"../common/Layout\"\r\n\r\nexport default function Location() {\r\n\r\n  const { kakao } = window;\r\n  // 윈도우 객체에 등록되어 있는 카카오키를 변수명으로 비구조화할당을 한것.\r\n  // 윈도우 객체가 카카오 객체를 사용할 수 있도록 하는 코드.\r\n  // const kakao = (window).kakao;\r\n\r\n  const info = [\r\n    {\r\n      title: '삼성동 코엑스',\r\n      latlng: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker1.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n    {\r\n      title: '올림픽 공원',\r\n      latlng: new kakao.maps.LatLng(37.5206868, 127.1214941),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker2.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n    {\r\n      title: '서울 시청',\r\n      latlng: new kakao.maps.LatLng(37.5657037, 126.9768616),\r\n      imgUrl: `${process.env.PUBLIC_URL}/img/marker3.png`,\r\n      imgSize: new kakao.maps.Size(232, 99),\r\n      imgPos: { offset: new kakao.maps.Point(116, 99) }\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  // 리얼돔에서 참조하는 방법으로 querySelector 등의 방법은 가상돔인 리액트에서는 사용할 수 없다. 그래서 리액트에서는 useRef라는 훅을 이용해서 가상으로 생성된 DOM을 이용할 수 있다.\r\n  const container = useRef(null);\r\n  // useRef를 이용해서 가상돔을 참조할 변수로 컨테이너를 생성한 뒤, null 값으로 빈 구역을 만들어둠.\r\n  const btns = useRef(null);\r\n\r\n  const [Location, setLocation] = useState(null);\r\n  // useEffect에서 만들어진 지도 인스턴스를 담을 state를 생성하는 것\r\n\r\n  const [Traffic, setTraffic] = useState(false);\r\n  // Traffic 토글 기능 구현을 위한 state를 추가, 불린값을 부여한다.\r\n\r\n  const [Info] = useState(info);\r\n  // setInfo는 info가 바뀔 일이 없으므로 필요가 없다.\r\n\r\n  const [Index, setIndex] = useState(0);\r\n  // 인덱스가 변화될 때 렌더링이 필요하므로 useState에 담아 관리한다.\r\n  \r\n  const option = { //지도를 생성할 때 필요한 기본 옵션\r\n    center: Info[Index].latlng, //지도의 중심좌표.\r\n    level: 3 //지도의 레벨(확대, 축소 정도)\r\n  };\r\n  const markerPosition  = Info[Index].latlng; // 마커위치 인스턴스 생성\r\n  const imageSrc = Info[Index].imgUrl;\r\n  const imageSize = Info[Index].imgSize;\r\n  const imageOption = Info[Index].imgPos;\r\n  // 마커 이미지 변경에 필요한 정보값 3개를 등록\r\n\r\n  const markerImage = new kakao.maps.MarkerImage(\r\n    imageSrc,\r\n    imageSize,\r\n    imageOption\r\n  );\r\n\r\n  const marker = new kakao.maps.Marker({\r\n    position: markerPosition,\r\n    image: markerImage\r\n  });\r\n  // 위치 인스턴스 값을 인수로 전달해서 다시 마커 인스턴스 생성\r\n\r\n  \r\n  useEffect(() => {\r\n    container.current.innerHTML = '';\r\n\r\n    // 지도 인스턴스 최종생성\r\n    const map_instance = new kakao.maps.Map(container.current, option); //지도 인스턴스를 활용해서 마커를 생성하는 코드\r\n    marker.setMap(map_instance);\r\n    setLocation(map_instance);\r\n\r\n    const mapTypeControl = new kakao.maps.MapTypeControl();\r\n    map_instance.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    const zoomControl = new kakao.maps.ZoomControl();\r\n    map_instance.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    for(const btn of btns.current.children) btn.classList.remove('on');\r\n    btns.current.children[Index].classList.add('on');\r\n\r\n\r\n    window.addEventListener('resize', () => {\r\n      map_instance.setCenter(Info[Index].latlng);\r\n    })\r\n  }, [Index]); // <-- 기존 컴포넌트가 처음 마운트 되었을 때만 지도를 출력하던 방식에서, Index가 변경될 때 지도가 다시 렌더링 하는 방식으로 바꿈.\r\n\r\n\r\n  // 트래픽 토글 전용 useEffect \r\n  useEffect(() => {\r\n    if(!Location) return;\r\n    // Location state의 값은 두번째 호출부터 값이 담겨 사이클이 돌아가므로 처음 값이 존재하지 않는 초기 오류방지를 위해 조건문 처리함.\r\n\r\n    // 트레픽 값에 따라서 생성과 삭제로 나누어서 코드를 제공, 구현.\r\n    Traffic \r\n    ? Location.addOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC)\r\n    : Location.removeOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC) \r\n\r\n  }, [Traffic]); // traffic state의 값이 변경될 때마다 실행이 되는 구문.\r\n\r\n\r\n  return (\r\n    <Layout name={'Location'}>\r\n      <div id=\"map\" ref={container}></div>\r\n\r\n      <div className=\"btnSet\">\r\n\r\n      {/* 기존의 두개의 버튼에서 한개의 토글 버튼으로 바꿈.\r\n          버튼 클릭시 트래픽 값을 반전처리 => !Traffic\r\n      */}\r\n        <button onClick={() => { setTraffic(!Traffic) }\r\n        }>\r\n          {/* Traffic의 값에 따라서 버튼의 내용도 변경 */}\r\n        { Traffic ? 'Traffic OFF' : 'Traffic ON'}\r\n      </button>\r\n\r\n        <ul className=\"branch\" ref={btns}>\r\n          {/* 각 버튼을 클릭할 때마다 Index의 값을 변경 */}\r\n          {\r\n            Info.map((el, idx) => {\r\n              return(\r\n                <li key={idx} onClick={() => setIndex(idx)}>\r\n                  {el.title}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n\r\n\r\n    </Layout>\r\n  );\r\n}","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Youtube.js",["120"],[],"import Layout from \"../common/Layout\"\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Popup from \"../common/Popup\";\r\n\r\nexport default function Youtube() {\r\n  const pop = useRef(null);\r\n  const [Vids, setVids] = useState([]);\r\n  const [Index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const key = 'AIzaSyCtN1lqIIdi7ibHkYVCtVtP9vA4oz8j8n8';\r\n    const playList = 'PLlXUbM-Wv86W_pA2wzZgQ7pF1VeHP6At4';\r\n    const num = 6; // 재생목록의 불러올 비디오 갯수\r\n    const url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&key=${key}&playlistId=${playList}&maxResults=${num}`;\r\n\r\n    axios.get(url).then((json) => {\r\n      // console.log(json.data);\r\n      setVids(json.data.items);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout name={'Youtube'}>\r\n\r\n          {Vids.map((data,index) => {\r\n\r\n          const tit = data.snippet.title;\r\n          const desc = data.snippet.description;\r\n          const date = data.snippet.publishedAt;\r\n\r\n          return(\r\n            <article key={index}>\r\n              <h3>{tit.length > 30 ? tit.substr(0, 30) + '...' : tit}</h3>\r\n              <div className=\"txt\">\r\n                <p>{desc.length > 100 ? desc.substr(0, 100) : desc}</p>\r\n                <span>{date.split('T')[0]}</span>\r\n              </div>\r\n              <div className=\"pic\" onClick={() => { \r\n                pop.current.open();\r\n                setIndex(index)\r\n              }}>\r\n                <img \r\n                  src={data.snippet.thumbnails.standard.url} \r\n                  alt={data.snippet.title} />\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n\r\n      </Layout>\r\n      <Popup ref={pop}>\r\n        {Vids.length !== 0 && (\r\n          <iframe src={`https://www.youtube.com/embed/${Vids[Index].snippet.resourceId.videoId}`} frameBorder='0'></iframe>\r\n        )}\r\n      </Popup>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\sub\\Member.js",["121"],[],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Layout from '../common/Layout';\r\n\r\nfunction Member() {\r\n  const history = useHistory();\r\n  /**\r\n  useHistory는 URL 주소를 변경할 때 사용하는 hook이다.\r\n  리액트 특성상, url 변경없이 내부 컴포넌트만 변경시켜 화면을 바꿔줄 수 있다. 하지만 url을 바꿔주면 현재 어느 페이지에 있는지 사용자가 대략적으로 알 수 있다. url주소 변경없이 컴포넌트의 변경만으로도 사용자가 웹페이지를 이용할 수 있지만, 복잡한 순서와 사용자 경험을 개선하기 위해 핵심 컴포넌트들이 변경될 때 url을 같이 변경시켜주면 \"사용자 친화적인 페이지\"가 될 수 있다. \r\n\r\n  useHistory는 사용하기 위해서 리액트 라우터 돔을 사용해야한다. \r\n  라우터의 버전이 5인 경우가 useHistory이고, 라우터 버전이 6인 경우에는 useNavigate로 이름이 바뀌었다. \r\n\r\n  */\r\n\r\n  // userid의 입력값이 담길 초기 state를 객체로 지정\r\n  const initVal = {\r\n    userid: '',\r\n    email: '',\r\n    pwd1: '',\r\n    pwd2: '',\r\n    comments: '',\r\n    edu: '',\r\n    gender: null,\r\n    interests: null,\r\n  };\r\n  // 해당 객체 값을 state에 초기값으로 저장\r\n  const [Val, setVal] = useState(initVal);\r\n\r\n  const [Err, setErr] = useState({});\r\n\r\n  const [Submit, setSubmit] = useState(false);\r\n\r\n  const check = (value) => {\r\n    const errs = {};\r\n\r\n    const eng = /[a-zA-Z]/;\r\n    const num = /[0-9]/;\r\n    const spc = /[~!@#$%^&*()_+]/;\r\n\r\n    if(value.userid.length < 5) {\r\n      errs.userid = '아이디를 5글자 이상 입력하세요'\r\n    }\r\n    // email 인증은 8글자 이상, @가 있어야 한다.\r\n    if(value.email.length < 8 || !/@/.test(Val.email)) {\r\n      errs.email = '이메일은 8글자 이상 @를 포함하세요'\r\n    }\r\n    if(value.pwd1 < 5 ||\r\n      !eng.test(value.pwd1) ||\r\n      !num.test(value.pwd1) ||\r\n      !spc.test(value.pwd1)\r\n      // 5글자 보다 작으면 참이므로 이후의 것은 판단하지 않고 밑으로 내려가서 에러메세지를 출력. 거짓이면 ||을 넘어가서 영어글자수를 물어보는 것. 영어글자가 없으면 참이므로 밑에 에러메세지가 있으면? 거짓이므로 ||을 넘어감. 이렇게 모두 거짓이어야 에러메세지가 없이 통과한다.\r\n      ) {\r\n        errs.pwd1 = '비밀번호는 5글자 이상, 영문, 숫자, 특수문자를 모두 포함하세요';\r\n      }\r\n      if(value.pwd1 !== value.pwd2 || value.pwd2 < 5) {\r\n        errs.pwd2 = '두개의 비밀번호를 동일하게 입력하세요';\r\n      }\r\n      if(!Val.gender) {\r\n        errs.gender = '성별을 선택하세요';\r\n      }\r\n      if(!Val.interests) {\r\n        errs.interests = '관심사를 하나 이상 선택하세요';\r\n      }\r\n      if(Val.comments.length < 20) {\r\n        errs.comments = '남기는 말을 20글자 이상 입력하세요';\r\n      }\r\n      if(Val.edu === '') {\r\n        errs.edu = '최종학력을 선택하세요';\r\n      }\r\n\r\n    return errs;\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    // 순서2. 입력하고 있는 인풋요소의 네임, 벨류값을 변수로 비구조화 할당\r\n    const { name, value } = e.target;\r\n    // 순서3. 비구조화 할당으로 받은 값을 Val state에 저장하고\r\n    // 순서4. setVal함수가 렌더링해서 우리가 볼 수 있도록 함.\r\n    setVal({ ...Val, [name]: value });\r\n  }\r\n\r\n  const handleRadio = (e) => {\r\n    const {name} = e.target;\r\n    const isChecked = e.target.checked;\r\n    setVal({...Val, [name]: isChecked})\r\n  }\r\n\r\n  const handleSelect = (e) => {\r\n    const {name} = e.target;\r\n    const isSelected = e.target.value;\r\n    setVal({...Val, [name]: isSelected });\r\n  }\r\n\r\n  const handleCheck = (e) => {\r\n    let isChecked = false;\r\n    const { name } = e.target;\r\n    const inputs = e.target.parentElement.querySelectorAll('input');\r\n    inputs.forEach((el) => {\r\n      if(el.checked) isChecked = true;\r\n    });\r\n    setVal({...Val, [name]: isChecked });\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSubmit(false);\r\n    setErr({});\r\n    setVal(initVal);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    // 순서6. 서버 전송 이동을 막아줘야한다. a태그가 아니어도 submit 자체가 가지는 속성을 막는다.\r\n    e.preventDefault();\r\n    // 순서7. Val state값을 인수로 전달해서 check함수에서 인증검사 시작 <={ check(Val) }\r\n    setErr(check(Val));\r\n    // 순서8. 인증검사 결과 errs가 존재한다면 반환된 에러 객체를 Err state에 옮겨담음.\r\n  };\r\n\r\n  useEffect(() => {\r\n    const len = Object.keys(Err).length;\r\n    if(len === 0 && Submit) {\r\n      alert('회원가입이 완료되었습니다. 메인페이지로 이동합니다.');\r\n      history.push('/youtube');\r\n    }\r\n  }, [Err]);\r\n\r\n\r\n  return(\r\n    <Layout name={'Member'}>\r\n      {/* 순서5. 전송버튼 클릭시 핸들 서브밋 함수를 호출 */}\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <legend className='h'>회원가입 폼 양식</legend>\r\n          <table border='1'>\r\n            <caption className='h'>회원가입 정보입력</caption>\r\n            <tbody>\r\n              {/* user id */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"userid\">USER ID</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"text\"\r\n                        placeholder='아이디를 입력하세요'\r\n                        name='userid'\r\n                        id='userid'\r\n                              \r\n                              value={Val.userid}\r\n                              onChange={handleChange}\r\n                              // 순서1. 인풋에 값을 입력시 핸들체인지 함수가 호출\r\n                  />\r\n                  {/* 순서9. 혹시 에러가 있으면 err정보값을 화면에 출력 */}\r\n                  <span className='err'>{Err.userid}</span>\r\n                </td>\r\n              </tr>\r\n              {/* password */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"pwd1\">PASSWORD</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"password\" name='pwd1' id='pwd1' placeholder='비밀번호를 입력하세요' onChange={handleChange} />\r\n                  <span className='err'>{Err.pwd1}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"pwd2\">PASSWORD</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"password\" name='pwd2' id='pwd2' placeholder='비밀번호를 재입력하세요' onChange={handleChange} />\r\n                  <span className='err'>{Err.pwd2}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* email */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"email\">E-MAIL</label>\r\n                </th>\r\n                <td>\r\n                  <input type=\"text\"\r\n                          id='email'\r\n                          name='email'\r\n                          placeholder='이메일 주소를 입력하세요'\r\n                          value={Val.email}\r\n                          onChange={handleChange}\r\n                  />\r\n                  <span className='err'>{Err.email}</span>\r\n                </td>\r\n              </tr>\r\n              {/* edu */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"edu\">EDUCATION</label>\r\n                </th>\r\n                <td>\r\n                  <select name=\"edu\" id=\"edu\" onChange={handleSelect}>\r\n                    <option value=\"\">학력을 선택하세요</option>\r\n                    <option value=\"elementary\">초등학교 졸업</option>\r\n                    <option value=\"middle\">중학교 졸업</option>\r\n                    <option value=\"high\">고등학교 졸업</option>\r\n                    <option value=\"college\">대학교 졸업</option>\r\n                  </select>\r\n                  <span className='err'>{Err.edu}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* gender */}\r\n              <tr>\r\n                <th scope='row'>GENDER</th>\r\n                <td>\r\n                  <label htmlFor=\"male\">MALE</label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name='gender' \r\n                  id='male'\r\n                  onChange={handleRadio} \r\n                  />\r\n                  <label htmlFor=\"female\">FEMALE</label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name='gender' \r\n                  id='female'\r\n                  onChange={handleRadio}  \r\n                  />\r\n                  <span className='err'>{Err.gender}</span>\r\n                </td>\r\n              </tr>\r\n              {/* check box */}\r\n              <tr>\r\n                <th scope='row'>INTERESTS</th>\r\n                <td>\r\n                  <label htmlFor=\"sports\">SPORTS</label>\r\n                  <input type=\"checkbox\" name='interests' id='sports' onChange={ handleCheck } />\r\n                  <label htmlFor=\"music\">MUSIC</label>\r\n                  <input type=\"checkbox\" name='interests' id='music' onChange={ handleCheck } />\r\n                  <label htmlFor=\"game\">GAME</label>\r\n                  <input type=\"checkbox\" name='interests' id='game' onChange={ handleCheck } />\r\n                  <span className=\"err\">{Err.interests}</span>\r\n                </td>\r\n              </tr>\r\n              {/* comments */}\r\n              <tr>\r\n                <th scope='row'>\r\n                  <label htmlFor=\"comments\">COMMENTS</label>\r\n                </th>\r\n                <td>\r\n                  <textarea \r\n                  name=\"comments\" \r\n                  id=\"comments\" \r\n                  cols=\"30\" \r\n                  rows=\"5\"\r\n                  value={Val.comments}\r\n                  onChange={handleChange}\r\n                  ></textarea>\r\n                  <span className=\"err\">{Err.comments}</span>\r\n                </td>\r\n              </tr>\r\n\r\n              {/* btn set */}\r\n              <tr>\r\n                <th colSpan='2'>\r\n                  <input \r\n                  type=\"reset\" \r\n                  value=\"CANCLE\"\r\n                  onClick={handleReset}\r\n                  />\r\n                  <input \r\n                  type=\"submit\" \r\n                  value=\"SEND\"\r\n                  onClick={() => setSubmit(true)} \r\n                  />\r\n                  </th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </fieldset>\r\n      </form>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Member;","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Layout.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\common\\Popup.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Main.js",["122","123"],[],"import { useEffect, useRef, useState } from 'react';\r\n\r\nimport Header from \"../common/Header\";\r\nimport News from \"./News\";\r\nimport Pics from \"./Pics\";\r\nimport Vids from \"./Vids\";\r\nimport Visual from \"./Visual\";\r\nimport Btns from './Btns';\r\nimport Anime from '../../asset/Anime';\r\n\r\nfunction Main() {\r\n\r\n  const main = useRef(null);\r\n  const pos = useRef([]);\r\n  let secs = null;\r\n\r\n  const [Index, setIndex] = useState(0);\r\n  const [Scrolled, setScrolled] = useState(0);\r\n\r\n  const getPos = () => {\r\n    pos.current = [];\r\n    secs = main.current.querySelectorAll('.myScroll');\r\n    for (const sec of secs) pos.current.push(sec.offsetTop);\r\n    console.log(pos.current);\r\n  }\r\n\r\n  const activation = () => {\r\n    const base = -window.innerHeight / 2;\r\n    const scroll = window.scrollY;\r\n    const btns = main.current.querySelectorAll('.scroll_navi li');\r\n\r\n    setScrolled(scroll);\r\n    pos.current.map((pos, idx) => {\r\n      // 현재 스크롤한 값과 pos의 값을 비교해서\r\n      if(scroll >= pos + base) {\r\n        for(const btn of btns) btn.classList.remove('on');\r\n        for(const sec of secs) sec.classList.remove('on');\r\n        btns[idx].classList.add('on');\r\n        secs[idx].classList.add('on');\r\n      }\r\n      // 버튼을 활성화\r\n      // 일단 모두 비활성화\r\n      // 특정 버튼을 활성\r\n\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPos();\r\n    // 리사이즈 이벤트가 발생하면 스크롤 값을 다시 불러온다.\r\n    window.addEventListener('resize', getPos);\r\n    window.addEventListener('scroll', activation);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', getPos);\r\n      window.removeEventListener('scroll', activation);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    new Anime(window, {\r\n      prop: 'scroll',\r\n      value: pos.current[Index],\r\n      duration: 500,\r\n    })\r\n  }, [Index]);\r\n\r\n\r\n  return(\r\n    <main ref={main}>\r\n      <Header type={'main'} />\r\n      <Visual />\r\n      <News />\r\n      <Pics Scrolled={Scrolled} start={pos.current[2]} />\r\n      <Vids />\r\n      <Btns setIndex={setIndex} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Pics.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\News.js",["124","125"],[],"import { useEffect, useState } from \"react\";\r\n\r\nfunction News() {\r\n\r\n  const getLocalData = () => {\r\n    const dummyPosts = [\r\n      {title: 'Hello5', content: 'Here comes description in details'},\r\n      {title: 'Hello4', content: 'Here comes description in details'},\r\n      {title: 'Hello3', content: 'Here comes description in details'},\r\n      {title: 'Hello2', content: 'Here comes description in details'},\r\n      {title: 'Hello1', content: 'Here comes description in details'},\r\n    ];\r\n\r\n    const data = localStorage.getItem('post');\r\n\r\n    if(data) {\r\n      return JSON.parse(data);\r\n    } else {\r\n      return dummyPosts;\r\n    }  \r\n  };\r\n\r\n  // const [Posts, setPosts] = useState([]);\r\n  const [Posts] = useState(getLocalData());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('post', JSON.stringify(Posts));\r\n  }, []);\r\n\r\n  return(\r\n\r\n    <main id=\"news\" className='myScroll'>\r\n      <h1>News</h1>\r\n      {Posts.map((post, idx) => {\r\n        if(idx >= 5) return; // 5개의 인덱스만 가져다 달라는 의미\r\n\r\n        return(\r\n          <article key={idx}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.content}</p>\r\n          </article>\r\n        );\r\n      })}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default News;","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Vids.js",[],[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\asset\\anime.js",["126","127","128","129","130"],[],"export default class Anime {\n  constructor(selector, option){\n    this.selector = selector;\n    this.option = option;\n    this.startTime = performance.now();  \n    (option.duration==undefined) ? this.speed = 500 : this.speed = option.duration;    \n    this.currentValue;\n    this.timer;\n  \n    if(this.option.prop === \"scroll\"){\n      this.currentValue = parseInt(window.scrollY || window.pageYOffset);\n    }else if(this.selector.style[this.option.prop]){           \n      if(this.option.prop === \"opacity\"){\n        this.currentValue = parseFloat(this.selector.style[this.option.prop]);  \n      } else {\n        this.currentValue = parseInt(this.selector.style[this.option.prop]);  \n      } \n    }else{ \n      if(this.option.prop === \"opacity\"){\n        this.currentValue = parseFloat(getComputedStyle(this.selector)[this.option.prop]);            \n      } else {\n        this.currentValue = parseInt(getComputedStyle(this.selector)[this.option.prop]);\n      }\n    }\n    \n    this.isString = typeof this.option.value;\n    if(this.isString == \"string\") this.option.value = parseFloat(this.option.value);\n    if(this.option.value !== this.currentValue) requestAnimationFrame(time =>{this.run(time)});    \n}\n\nrun(time){  \n    let timeLast = time - this.startTime;\n    let progress = timeLast/this.speed;  \n\n    if(progress < 0) progress = 0;\n    if(progress > 1) progress = 1; \n\n    if(progress < 1) {\n      this.timer = requestAnimationFrame(time => {this.run(time)});\n    }else {\n      cancelAnimationFrame(this.timer);\n      if(this.option.callback) {\n        setTimeout(()=>{\n          this.option.callback();\n        },0);\n      } \n    }\n\n    let result = this.currentValue + ((this.option.value- this.currentValue)*progress);\n    \n    if(this.option.prop === \"opacity\"){\n      this.selector.style[this.option.prop] = result; \n    } else if(this.option.prop === \"scroll\"){\n      window.scroll(0, result);\n    } else if(this.isString == \"string\"){\n      this.selector.style[this.option.prop] = result+\"%\"; \n    }else{\n      this.selector.style[this.option.prop] = result+\"px\"; \n    }\n  }    \n}\n",[],"C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\asset\\Anime.js",["131","132"],[],"export default class Anime {\n\tconstructor(selector, option) {\n\t\tthis.selector = selector;\n\t\tthis.option = option;\n\t\tthis.startTime = performance.now();\n\t\tthis.currentValue = null;\n\n\t\tif (this.option.prop === 'scroll') this.currentValue = this.selector.scrollY;\n\t\telse this.currentValue = parseFloat(getComputedStyle(this.selector)[this.option.prop]);\n\n\t\tthis.isString = typeof this.option.value;\n\n\t\tif (this.isString === 'string') {\n\t\t\tconst parentW = parseInt(getComputedStyle(this.selector.parentElement).width);\n\t\t\tconst parentH = parseInt(getComputedStyle(this.selector.parentElement).height);\n\t\t\tconst x = ['margin-left', 'margin-right', 'left', 'right', 'width'];\n\t\t\tconst y = ['margin-top', 'margin-bottom', 'top', 'bottom', 'height'];\n\n\t\t\tfor (let condition of x) {\n\t\t\t\tif (this.option.prop == condition) this.currentValue = (this.currentValue / parentW) * 100;\n\t\t\t}\n\t\t\tfor (let condition of y) {\n\t\t\t\tif (this.option.prop == condition) this.currentValue = (this.currentValue / parentH) * 100;\n\t\t\t}\n\t\t\tthis.option.value = parseFloat(this.option.value);\n\t\t}\n\n\t\tif (this.option.value === this.currentValue) return;\n\t\trequestAnimationFrame((time) => this.run(time));\n\t}\n\n\trun(time) {\n\t\tlet timelast = time - this.startTime;\n\t\tlet progress = timelast / this.option.duration;\n\n\t\tif (progress < 0) progress = 0;\n\t\tif (progress > 1) progress = 1;\n\t\tif (progress < 1) {\n\t\t\trequestAnimationFrame((time) => this.run(time));\n\t\t} else {\n\t\t\tif (this.option.callback) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.option.callback();\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\t\tlet result = this.currentValue + (this.option.value - this.currentValue) * progress;\n\n\t\tif (this.isString === 'string') this.selector.style[this.option.prop] = result + '%';\n\t\telse if (this.option.prop === 'opacity') this.selector.style[this.option.prop] = result;\n\t\telse if (this.option.prop === 'scroll') window.scroll(0, result);\n\t\telse this.selector.style[this.option.prop] = result + 'px';\n\t}\n}\n","C:\\Users\\YS\\Desktop\\디코드 컴퓨터학원\\221013 17일차\\layout_react\\src\\components\\main\\Btns.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":13,"column":6,"nodeType":"139","endLine":13,"endColumn":8,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":33,"column":11,"nodeType":"135","messageId":"136","endLine":33,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":88,"column":11,"nodeType":"144","endLine":91,"endColumn":13},{"ruleId":"137","severity":1,"message":"145","line":98,"column":6,"nodeType":"139","endLine":98,"endColumn":13,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"147","line":111,"column":6,"nodeType":"139","endLine":111,"endColumn":15,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":55,"column":11,"nodeType":"144","endLine":55,"endColumn":115},{"ruleId":"137","severity":1,"message":"151","line":126,"column":6,"nodeType":"139","endLine":126,"endColumn":11,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":33,"column":32,"nodeType":"155","messageId":"156","endLine":33,"endColumn":34},{"ruleId":"137","severity":1,"message":"157","line":58,"column":6,"nodeType":"139","endLine":58,"endColumn":8,"suggestions":"158"},{"ruleId":"137","severity":1,"message":"159","line":28,"column":6,"nodeType":"139","endLine":28,"endColumn":8,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"154","line":35,"column":22,"nodeType":"161","messageId":"162","endLine":35,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":6,"column":21,"nodeType":"165","messageId":"166","endLine":6,"endColumn":23},{"ruleId":"167","severity":2,"message":"168","line":7,"column":5,"nodeType":"169","messageId":"170","endLine":7,"endColumn":23},{"ruleId":"167","severity":2,"message":"168","line":8,"column":5,"nodeType":"169","messageId":"170","endLine":8,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":27,"column":22,"nodeType":"165","messageId":"166","endLine":27,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":55,"column":29,"nodeType":"165","messageId":"166","endLine":55,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":20,"column":26,"nodeType":"165","messageId":"166","endLine":20,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":23,"column":26,"nodeType":"165","messageId":"166","endLine":23,"endColumn":28},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'method_user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'Info', 'kakao.maps.ControlPosition.RIGHT', 'kakao.maps.ControlPosition.TOPRIGHT', 'kakao.maps.Map', 'kakao.maps.MapTypeControl', 'kakao.maps.ZoomControl', 'marker', and 'option'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'Location' and 'kakao.maps.MapTypeId.TRAFFIC'. Either include them or remove the dependency array.",["173"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'Submit' and 'history'. Either include them or remove the dependency array.",["174"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'activation' and 'getPos'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'Posts'. Either include it or remove the dependency array.",["176"],"ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [path]",{"range":"189","text":"190"},"Update the dependencies array to be: [Index, Info, kakao.maps.ControlPosition.RIGHT, kakao.maps.ControlPosition.TOPRIGHT, kakao.maps.Map, kakao.maps.MapTypeControl, kakao.maps.ZoomControl, marker, option]",{"range":"191","text":"192"},"Update the dependencies array to be: [Location, Traffic, kakao.maps.MapTypeId.TRAFFIC]",{"range":"193","text":"194"},"Update the dependencies array to be: [Err, Submit, history]",{"range":"195","text":"196"},"Update the dependencies array to be: [activation, getPos]",{"range":"197","text":"198"},"Update the dependencies array to be: [Posts]",{"range":"199","text":"200"},[376,378],"[path]",[3113,3120],"[Index, Info, kakao.maps.ControlPosition.RIGHT, kakao.maps.ControlPosition.TOPRIGHT, kakao.maps.Map, kakao.maps.MapTypeControl, kakao.maps.ZoomControl, marker, option]",[3575,3584],"[Location, Traffic, kakao.maps.MapTypeId.TRAFFIC]",[3586,3591],"[Err, Submit, history]",[1594,1596],"[activation, getPos]",[829,831],"[Posts]"]