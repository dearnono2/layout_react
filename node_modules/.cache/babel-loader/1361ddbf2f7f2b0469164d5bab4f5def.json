{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YS\\\\Desktop\\\\\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0\\\\221013 17\\uC77C\\uCC28\\\\layout_react\\\\src\\\\components\\\\common\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useEffect, useImperativeHandle } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Popup = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [Open, setOpen] = useState(false);\n  useImperativeHandle(ref, () => {\n    return {\n      open: () => setOpen(true)\n    };\n  });\n\n  // useEffect(() => {\n  //   document.body.style.overflow = 'hidden';\n  //   return() => {\n  //     document.body.style.overflow = 'auto';\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    Open ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'auto';\n  }, [Open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Open && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"pop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"con\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => {\n          setOpen(false);\n        },\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"KSqEdPYRQB1G3RfB844xqECotSE=\")), \"KSqEdPYRQB1G3RfB844xqECotSE=\");\n_c2 = Popup;\nexport default Popup;\n\n/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"Popup$forwardRef\");\n$RefreshReg$(_c2, \"Popup\");","map":{"version":3,"names":["useState","forwardRef","useEffect","useImperativeHandle","Popup","props","ref","Open","setOpen","open","document","body","style","overflow","children"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/common/Popup.js"],"sourcesContent":["import { useState, forwardRef, useEffect, useImperativeHandle } from \"react\";\r\n\r\nconst Popup = forwardRef((props, ref) => {\r\n\r\n  const [Open, setOpen] = useState(false);\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      open: () => setOpen(true),\r\n    };\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   document.body.style.overflow = 'hidden';\r\n  //   return() => {\r\n  //     document.body.style.overflow = 'auto';\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    Open ? (document.body.style.overflow = 'hidden')\r\n        : (document.body.style.overflow = 'auto');\r\n  }, [Open]);\r\n  \r\n  return(\r\n    <>\r\n      {Open && (\r\n        <aside className=\"pop\">\r\n          <div className=\"con\">{props.children}</div>\r\n          <span className=\"close\" onClick={() => { setOpen(false) }}>close</span>\r\n        </aside>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\n\r\nexport default Popup;\r\n\r\n/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,mBAAmB,QAAQ,OAAO;AAAC;AAAA;AAE7E,MAAMC,KAAK,iCAAGH,UAAU,SAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EAAA;EAEvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvCG,mBAAmB,CAACG,GAAG,EAAE,MAAM;IAC7B,OAAO;MACLG,IAAI,EAAE,MAAMD,OAAO,CAAC,IAAI;IAC1B,CAAC;EACH,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;;EAEAN,SAAS,CAAC,MAAM;IACdK,IAAI,GAAIG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ,GACxCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAO;EAC/C,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,oBACE;IAAA,UACGA,IAAI,iBACH;MAAO,SAAS,EAAC,KAAK;MAAA,wBACpB;QAAK,SAAS,EAAC,KAAK;QAAA,UAAEF,KAAK,CAACS;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eAC3C;QAAM,SAAS,EAAC,OAAO;QAAC,OAAO,EAAE,MAAM;UAAEN,OAAO,CAAC,KAAK,CAAC;QAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA;EAE1E,iBACA;AAEP,CAAC,kCAAC;AAAC,MA/BGJ,KAAK;AAkCX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}