{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YS\\\\Desktop\\\\\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0\\\\221013 17\\uC77C\\uCC28\\\\layout_react\\\\src\\\\components\\\\sub\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport Layout from \"../common/Layout\";\nimport Popup from \"../common/Popup\";\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Gallery() {\n  _s();\n  const masonryOptions = {\n    transitionDuration: '0.5s'\n  };\n  const [Items, setItems] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  const [EnableClick, setEnableClick] = useState(true);\n  const [Index, setIndex] = useState(0);\n  const frame = useRef(null);\n  const input = useRef(null);\n  const pop = useRef(null);\n\n  /*\r\n  interest 방식 호출\r\n  getFlickr({\r\n  type: 'interest',\r\n  })\r\n  search 방식 버튼\r\n  getFlickr({\r\n  type:'search',\r\n  tags: '검색키워드',\r\n  })\r\n  */\n\n  const getFlickr = async opt => {\n    const key = '2b77b0bf16caab8d0940ed8495c064dc';\n    const method_interest = 'flickr.interestingness.getList';\n    const method_search = 'flickr.photos.search';\n    const method_user = 'flickr.people.getPhotos';\n    const num = 20; // 깨질 수 있으니 사진은 40장 아래로\n    let url = '';\n    if (opt.type === 'interest') {\n      url = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\n    }\n    if (opt.type === 'search') {\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&tags=${opt.tags}`;\n    }\n    if (opt.type === 'user') {\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${opt.user}`;\n    }\n\n    // await axios.get(url).then((json) => {\n    //   setItems(result.data.photos.photo);\n    // })\n\n    const result = await axios.get(url);\n    if (result.data.photos.photo.length === 0) return alert('해당 검색어의 결과 이미지가 없습니다');\n    setItems(result.data.photos.photo);\n\n    // 셋타임아웃으로 비동기화 시키고 1초 딜레이를 준 뒤 로딩바를 안보이게 false로 바꾼 뒤에 on을 프레임에 붙여서 보이게한다.\n    setTimeout(() => {\n      setLoading(false);\n      frame.current.classList.add('on');\n      setTimeout(() => {\n        setEnableClick(true);\n      }, 500); // 프레임에 on 붙이고 위로 올라오는 모션기간동안 0.5초 홀딩\n    }, 1000); // 이미지 호출이 완료되고 masonry모션 적용시간까지 홀딩하는 1초\n  };\n\n  useEffect(() => getFlickr({\n    type: 'user',\n    user: '196712274@N08'\n  }), []); // 초기화면. 초반에 나타나는 이미지를 유저 자신의 이미지로 했다.\n  //함수의 정의 형태로 콜백함수가 들어와야 한다, 함수를 단순 호출하는 형태는 읽어들일 수 없다\n  const showSearch = () => {\n    const result = input.current.value.trim();\n    input.current.value = '';\n    if (!result) return alert('검색어를 입력하세요');\n    if (!EnableClick) return;\n    setEnableClick(false);\n    setLoading(true);\n    frame.current.classList.remove('on');\n    getFlickr({\n      type: 'search',\n      tags: result\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      name: 'Gallery',\n      children: [Loading && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading\",\n        src: `${process.env.PUBLIC_URL}/img/6.gif`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!EnableClick) return;\n              // 모션중이면 false일태나 return으로 방지\n              setEnableClick(false);\n              // true로 들어와서 다시 false로 바꾸어 재이벤트 방지\n              setLoading(true);\n              frame.current.classList.remove('on');\n              getFlickr({\n                type: 'interest'\n              });\n            },\n            children: \"Interest Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!EnableClick) return;\n              setEnableClick(false);\n              setLoading(true);\n              frame.current.classList.remove('on');\n              getFlickr({\n                type: 'search',\n                tags: 'landscape'\n              }); // 내 갤러리로 보이게 하고싶으면 tags에 landscape 대신 196712274@N08 를 넣어준다.\n            },\n            children: \"Search Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: input,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            onKeyUp: e => {\n              if (e.key === 'Enter') showSearch();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        ref: frame,\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          elementType: 'div',\n          options: masonryOptions,\n          children: Items.map((item, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"article\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pic\",\n                  onClick: () => {\n                    pop.current.open();\n                    setIndex(idx);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}_m.jpg`,\n                    alt: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profile\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `http://farm${item.farm}.staticflickr.com/${item.server}/buddyicons/${item.owner}.jpg`,\n                    alt: item.owner,\n                    onError: e => {\n                      e.target.setAttribute('src', 'https://www.flickr.com/images/buddyicon.gif');\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: e => {\n                      if (!EnableClick) return;\n                      setEnableClick(false);\n                      setLoading(true);\n                      frame.current.classList.remove('on');\n                      getFlickr({\n                        type: 'user',\n                        user: e.target.innerText\n                      });\n                    },\n                    children: item.owner\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n/*\r\n\r\n? 형태는 쿼리스트링하는 형태의 방법이다. \r\n쿼리 스트링은 ??\r\n\r\n사용자가 입력 데이터를 전달하는 방법중의 하나로 url 주소에 미리 협의된 데이터를 파라미터를 통해 넘기는 것을 말한다. \r\n파라미터는 물음표 뒤에 = 으로 연결된 key value 부분을 말한다. \r\nurl에 붙여서 추가적인 정보를 서버측에 전달하는 내용이다. \r\n클라이언트가 어떤 특정 리소스에 접근하고 싶어하는지의 정보를 담는것. \r\n\r\n형식(방법)\r\n- 정해진 엔드포인트 주소 이후에 ?를 쓰는 것으로 쿼리스트링이 시작함을 알린다. \r\n- parameter = value로 필요한 파라미터의 값을 적는다. \r\n- 파라미터가 여러개일 경우 &를 붙여서 여러개의 파라미터를 넘길 수 있다. \r\n- 엔드포인트주소/ 추가적인주소 ? 파라미터=값&파라미터=값\r\n\r\n*/\n_s(Gallery, \"rxtJ0mK5D2fditq3UmZYlAUa2mo=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["Layout","Popup","axios","useState","useEffect","useRef","Masonry","Gallery","masonryOptions","transitionDuration","Items","setItems","Loading","setLoading","EnableClick","setEnableClick","Index","setIndex","frame","input","pop","getFlickr","opt","key","method_interest","method_search","method_user","num","url","type","tags","user","result","get","data","photos","photo","length","alert","setTimeout","current","classList","add","showSearch","value","trim","remove","process","env","PUBLIC_URL","e","map","item","idx","open","server","id","secret","title","farm","owner","target","setAttribute","innerText"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/sub/Gallery.js"],"sourcesContent":["import Layout from \"../common/Layout\";\r\nimport Popup from \"../common/Popup\";\r\nimport axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\n\r\nexport default function Gallery() {\r\n  const masonryOptions = { transitionDuration: '0.5s' };\r\n  const [Items, setItems] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [EnableClick, setEnableClick] = useState(true);\r\n  const [Index, setIndex] = useState(0);\r\n  const frame = useRef(null);\r\n  const input = useRef(null);\r\n  const pop = useRef(null);\r\n\r\n    /*\r\n  interest 방식 호출\r\n  getFlickr({\r\n    type: 'interest',\r\n  })\r\n  search 방식 버튼\r\n  getFlickr({\r\n    type:'search',\r\n    tags: '검색키워드',\r\n  })\r\n  */\r\n\r\n  const getFlickr = async (opt) => {\r\n    const key = '2b77b0bf16caab8d0940ed8495c064dc';\r\n    const method_interest = 'flickr.interestingness.getList';\r\n    const method_search = 'flickr.photos.search';\r\n    const method_user ='flickr.people.getPhotos';\r\n    const num = 20;  // 깨질 수 있으니 사진은 40장 아래로\r\n    let url = '';\r\n\r\n    if (opt.type === 'interest') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\r\n  }\r\n    if (opt.type === 'search') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&tags=${opt.tags}`;\r\n    }\r\n\r\n    if (opt.type === 'user') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${opt.user}`;\r\n    }\r\n\r\n    // await axios.get(url).then((json) => {\r\n    //   setItems(result.data.photos.photo);\r\n    // })\r\n\r\n    const result = await axios.get(url);\r\n    if (result.data.photos.photo.length === 0) return alert('해당 검색어의 결과 이미지가 없습니다');\r\n    setItems(result.data.photos.photo);\r\n    \r\n    // 셋타임아웃으로 비동기화 시키고 1초 딜레이를 준 뒤 로딩바를 안보이게 false로 바꾼 뒤에 on을 프레임에 붙여서 보이게한다.\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      frame.current.classList.add('on');\r\n\r\n      setTimeout(() => {\r\n        setEnableClick(true);\r\n      }, 500) // 프레임에 on 붙이고 위로 올라오는 모션기간동안 0.5초 홀딩\r\n\r\n    }, 1000) // 이미지 호출이 완료되고 masonry모션 적용시간까지 홀딩하는 1초\r\n\r\n  };\r\n\r\n  useEffect(() => getFlickr({ type: 'user', user: '196712274@N08' }), []); // 초기화면. 초반에 나타나는 이미지를 유저 자신의 이미지로 했다.\r\n  //함수의 정의 형태로 콜백함수가 들어와야 한다, 함수를 단순 호출하는 형태는 읽어들일 수 없다\r\n  const showSearch = () => {\r\n    const result = input.current.value.trim();\r\n    input.current.value = '';\r\n\r\n    if(!result) return alert('검색어를 입력하세요');\r\n\r\n    if(!EnableClick) return;\r\n    setEnableClick(false);\r\n    setLoading(true);\r\n    frame.current.classList.remove('on');\r\n    getFlickr({ type: 'search', tags: result, });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout name={'Gallery'}>\r\n        {Loading && (\r\n          <img\r\n            className=\"loading\"\r\n            src={`${process.env.PUBLIC_URL}/img/6.gif`}\r\n          />\r\n        )}\r\n\r\n        <div className=\"controls\">\r\n          <nav>\r\n            <button\r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                // 모션중이면 false일태나 return으로 방지\r\n                setEnableClick(false);\r\n                // true로 들어와서 다시 false로 바꾸어 재이벤트 방지\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'interest' });\r\n              }}>\r\n                Interest Gallery\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                setEnableClick(false);\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'search', tags: 'landscape' }); // 내 갤러리로 보이게 하고싶으면 tags에 landscape 대신 196712274@N08 를 넣어준다.\r\n              }}>\r\n                Search Gallery\r\n            </button>\r\n          </nav>\r\n          <div className=\"searchBox\">\r\n            <input type=\"text\" ref={input} placeholder='검색어를 입력하세요' onKeyUp={(e) => {\r\n              if(e.key === 'Enter') showSearch();\r\n            }} />\r\n            <button \r\n              onClick={showSearch}>\r\n                Search \r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"frame\" ref={frame}>\r\n          <Masonry elementType={'div'} options={masonryOptions}>\r\n\r\n            {Items.map((item, idx) => {\r\n              return (\r\n                <article key={idx}>\r\n                  <div className=\"inner\">\r\n                    <div className=\"pic\" onClick={() => {\r\n                      pop.current.open();\r\n                      setIndex(idx);\r\n                    }}>\r\n                      {/* 여기서부터 다시 보고 작성하자... */}\r\n                      <img \r\n                        src={`https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}_m.jpg`} alt={item.title} />\r\n                    </div>\r\n                    <h2>{item.title}</h2>\r\n\r\n                    <div className=\"profile\">\r\n                      <img src={`http://farm${item.farm}.staticflickr.com/${item.server}/buddyicons/${item.owner}.jpg`} alt={item.owner}\r\n                        onError={(e) => {\r\n                          e.target.setAttribute(\r\n                            'src',\r\n                            'https://www.flickr.com/images/buddyicon.gif'\r\n                          );\r\n                        }}\r\n                      />\r\n                      <span onClick={(e) => {\r\n                        if(!EnableClick) return;\r\n                        setEnableClick(false);\r\n                        setLoading(true);\r\n                        frame.current.classList.remove('on');\r\n                        getFlickr({ type: 'user', user: e.target.innerText });\r\n                      }}\r\n                      >{item.owner}</span>\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n              )\r\n            })}\r\n          </Masonry>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\n/*\r\n\r\n? 형태는 쿼리스트링하는 형태의 방법이다. \r\n쿼리 스트링은 ??\r\n\r\n사용자가 입력 데이터를 전달하는 방법중의 하나로 url 주소에 미리 협의된 데이터를 파라미터를 통해 넘기는 것을 말한다. \r\n파라미터는 물음표 뒤에 = 으로 연결된 key value 부분을 말한다. \r\nurl에 붙여서 추가적인 정보를 서버측에 전달하는 내용이다. \r\n클라이언트가 어떤 특정 리소스에 접근하고 싶어하는지의 정보를 담는것. \r\n\r\n형식(방법)\r\n- 정해진 엔드포인트 주소 이후에 ?를 쓰는 것으로 쿼리스트링이 시작함을 알린다. \r\n- parameter = value로 필요한 파라미터의 값을 적는다. \r\n- 파라미터가 여러개일 경우 &를 붙여서 여러개의 파라미터를 넘길 수 있다. \r\n- 엔드포인트주소/ 추가적인주소 ? 파라미터=값&파라미터=값\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAAA;AAE9C,eAAe,SAASC,OAAO,GAAG;EAAA;EAChC,MAAMC,cAAc,GAAG;IAAEC,kBAAkB,EAAE;EAAO,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMe,KAAK,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMc,KAAK,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMe,GAAG,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMgB,SAAS,GAAG,MAAOC,GAAG,IAAK;IAC/B,MAAMC,GAAG,GAAG,kCAAkC;IAC9C,MAAMC,eAAe,GAAG,gCAAgC;IACxD,MAAMC,aAAa,GAAG,sBAAsB;IAC5C,MAAMC,WAAW,GAAE,yBAAyB;IAC5C,MAAMC,GAAG,GAAG,EAAE,CAAC,CAAE;IACjB,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAIN,GAAG,CAACO,IAAI,KAAK,UAAU,EAAE;MAC3BD,GAAG,GAAI,gDAA+CJ,eAAgB,aAAYG,GAAI,YAAWJ,GAAI,+BAA8B;IACvI;IACE,IAAID,GAAG,CAACO,IAAI,KAAK,QAAQ,EAAE;MACzBD,GAAG,GAAI,gDAA+CH,aAAc,aAAYE,GAAI,YAAWJ,GAAI,sCAAqCD,GAAG,CAACQ,IAAK,EAAC;IACpJ;IAEA,IAAIR,GAAG,CAACO,IAAI,KAAK,MAAM,EAAE;MACvBD,GAAG,GAAI,gDAA+CH,aAAc,aAAYE,GAAI,YAAWJ,GAAI,yCAAwCD,GAAG,CAACS,IAAK,EAAC;IACvJ;;IAEA;IACA;IACA;;IAEA,MAAMC,MAAM,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAACL,GAAG,CAAC;IACnC,IAAII,MAAM,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOC,KAAK,CAAC,sBAAsB,CAAC;IAC/E3B,QAAQ,CAACqB,MAAM,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC;;IAElC;IACAG,UAAU,CAAC,MAAM;MACf1B,UAAU,CAAC,KAAK,CAAC;MACjBK,KAAK,CAACsB,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC;MAEjCH,UAAU,CAAC,MAAM;QACfxB,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,EAAE,GAAG,CAAC,EAAC;IAEV,CAAC,EAAE,IAAI,CAAC,EAAC;EAEX,CAAC;;EAEDX,SAAS,CAAC,MAAMiB,SAAS,CAAC;IAAEQ,IAAI,EAAE,MAAM;IAAEE,IAAI,EAAE;EAAgB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACzE;EACA,MAAMY,UAAU,GAAG,MAAM;IACvB,MAAMX,MAAM,GAAGb,KAAK,CAACqB,OAAO,CAACI,KAAK,CAACC,IAAI,EAAE;IACzC1B,KAAK,CAACqB,OAAO,CAACI,KAAK,GAAG,EAAE;IAExB,IAAG,CAACZ,MAAM,EAAE,OAAOM,KAAK,CAAC,YAAY,CAAC;IAEtC,IAAG,CAACxB,WAAW,EAAE;IACjBC,cAAc,CAAC,KAAK,CAAC;IACrBF,UAAU,CAAC,IAAI,CAAC;IAChBK,KAAK,CAACsB,OAAO,CAACC,SAAS,CAACK,MAAM,CAAC,IAAI,CAAC;IACpCzB,SAAS,CAAC;MAAEQ,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAEE;IAAQ,CAAC,CAAC;EAC9C,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,MAAM;MAAC,IAAI,EAAE,SAAU;MAAA,WACrBpB,OAAO,iBACN;QACE,SAAS,EAAC,SAAS;QACnB,GAAG,EAAG,GAAEmC,OAAO,CAACC,GAAG,CAACC,UAAW;MAAY;QAAA;QAAA;QAAA;MAAA,QAE9C,eAED;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UAAA,wBACE;YACE,OAAO,EAAE,MAAM;cACb,IAAG,CAACnC,WAAW,EAAE;cACjB;cACAC,cAAc,CAAC,KAAK,CAAC;cACrB;cACAF,UAAU,CAAC,IAAI,CAAC;cAChBK,KAAK,CAACsB,OAAO,CAACC,SAAS,CAACK,MAAM,CAAC,IAAI,CAAC;cACpCzB,SAAS,CAAC;gBAAEQ,IAAI,EAAE;cAAW,CAAC,CAAC;YACjC,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEK,eACT;YACE,OAAO,EAAE,MAAM;cACb,IAAG,CAACf,WAAW,EAAE;cACjBC,cAAc,CAAC,KAAK,CAAC;cACrBF,UAAU,CAAC,IAAI,CAAC;cAChBK,KAAK,CAACsB,OAAO,CAACC,SAAS,CAACK,MAAM,CAAC,IAAI,CAAC;cACpCzB,SAAS,CAAC;gBAAEQ,IAAI,EAAE,QAAQ;gBAAEC,IAAI,EAAE;cAAY,CAAC,CAAC,CAAC,CAAC;YACpD,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEK;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,WAAW;UAAA,wBACxB;YAAO,IAAI,EAAC,MAAM;YAAC,GAAG,EAAEX,KAAM;YAAC,WAAW,EAAC,yDAAY;YAAC,OAAO,EAAG+B,CAAC,IAAK;cACtE,IAAGA,CAAC,CAAC3B,GAAG,KAAK,OAAO,EAAEoB,UAAU,EAAE;YACpC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eACL;YACE,OAAO,EAAEA,UAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEb;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eAEN;QAAK,SAAS,EAAC,OAAO;QAAC,GAAG,EAAEzB,KAAM;QAAA,uBAChC,QAAC,OAAO;UAAC,WAAW,EAAE,KAAM;UAAC,OAAO,EAAEV,cAAe;UAAA,UAElDE,KAAK,CAACyC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;YACxB,oBACE;cAAA,uBACE;gBAAK,SAAS,EAAC,OAAO;gBAAA,wBACpB;kBAAK,SAAS,EAAC,KAAK;kBAAC,OAAO,EAAE,MAAM;oBAClCjC,GAAG,CAACoB,OAAO,CAACc,IAAI,EAAE;oBAClBrC,QAAQ,CAACoC,GAAG,CAAC;kBACf,CAAE;kBAAA,uBAEA;oBACE,GAAG,EAAG,iCAAgCD,IAAI,CAACG,MAAO,IAAGH,IAAI,CAACI,EAAG,IAAGJ,IAAI,CAACK,MAAO,QAAQ;oBAAC,GAAG,EAAEL,IAAI,CAACM;kBAAM;oBAAA;oBAAA;oBAAA;kBAAA;gBAAG;kBAAA;kBAAA;kBAAA;gBAAA,QACtG,eACN;kBAAA,UAAKN,IAAI,CAACM;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eAErB;kBAAK,SAAS,EAAC,SAAS;kBAAA,wBACtB;oBAAK,GAAG,EAAG,cAAaN,IAAI,CAACO,IAAK,qBAAoBP,IAAI,CAACG,MAAO,eAAcH,IAAI,CAACQ,KAAM,MAAM;oBAAC,GAAG,EAAER,IAAI,CAACQ,KAAM;oBAChH,OAAO,EAAGV,CAAC,IAAK;sBACdA,CAAC,CAACW,MAAM,CAACC,YAAY,CACnB,KAAK,EACL,6CAA6C,CAC9C;oBACH;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QACF,eACF;oBAAM,OAAO,EAAGZ,CAAC,IAAK;sBACpB,IAAG,CAACpC,WAAW,EAAE;sBACjBC,cAAc,CAAC,KAAK,CAAC;sBACrBF,UAAU,CAAC,IAAI,CAAC;sBAChBK,KAAK,CAACsB,OAAO,CAACC,SAAS,CAACK,MAAM,CAAC,IAAI,CAAC;sBACpCzB,SAAS,CAAC;wBAAEQ,IAAI,EAAE,MAAM;wBAAEE,IAAI,EAAEmB,CAAC,CAACW,MAAM,CAACE;sBAAU,CAAC,CAAC;oBACvD,CAAE;oBAAA,UACAX,IAAI,CAACQ;kBAAK;oBAAA;oBAAA;oBAAA;kBAAA,QAAQ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAChB;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACF,GA9BMP,GAAG;cAAA;cAAA;cAAA;YAAA,QA+BP;UAEd,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACM;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA;EACC,iBACR;AAKP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,GA5KwB9C,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}