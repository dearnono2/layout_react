{"ast":null,"code":"import _slicedToArray from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// popup은 사이트 내의 팝업 부분의 모션에 영향을 준다. ex) 이미자나 유튜브 영상을 클릭하면 뜨는 화면.\nimport{useState,forwardRef,useEffect,useImperativeHandle}from\"react\";import{motion,AnimatePresence}from'framer-motion';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Popup=/*#__PURE__*/forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),Open=_useState2[0],setOpen=_useState2[1];useImperativeHandle(ref,function(){return{open:function open(){return setOpen(true);}};});// useEffect(() => {\n//   document.body.style.overflow = 'hidden';\n//   return() => {\n//     document.body.style.overflow = 'auto';\n//   }\n// }, []);\nuseEffect(function(){Open?document.body.style.overflow='hidden':document.body.style.overflow='auto';},[Open]);return/*#__PURE__*/ (// 모션을 걸고 싶은 요소를 AnimatePresence로 감싸준다. 그리고 모션을 걸 요소의 앞에 motion. 을 붙여준다.\n// initial에 \n_jsx(AnimatePresence,{children:Open&&/*#__PURE__*/_jsxs(motion.aside,{className:\"pop\",initial:{opacity:0,scale:0},animate:{opacity:1,scale:1,transition:{duration:1}},exit:{opacity:0,scale:0,transition:{duration:0.5,delay:0.5}},children:[/*#__PURE__*/_jsx(motion.div,{className:\"con\",initial:{opacity:0},animate:{opacity:1,transition:{duration:0.5,delay:1}},exit:{opacity:0,transition:{delay:0}},children:props.children}),/*#__PURE__*/_jsx(motion.span,{initial:{x:50,opacity:0},animate:{x:0,opacity:1,transition:{delay:1.5}},className:\"close\",onClick:function onClick(){setOpen(false);},children:\"close\"})]})}));});export default Popup;/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/","map":{"version":3,"names":["useState","forwardRef","useEffect","useImperativeHandle","motion","AnimatePresence","Popup","props","ref","Open","setOpen","open","document","body","style","overflow","opacity","scale","transition","duration","delay","children","x"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/common/Popup.js"],"sourcesContent":["// popup은 사이트 내의 팝업 부분의 모션에 영향을 준다. ex) 이미자나 유튜브 영상을 클릭하면 뜨는 화면.\r\n\r\nimport { useState, forwardRef, useEffect, useImperativeHandle } from \"react\";\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\n\r\nconst Popup = forwardRef((props, ref) => {\r\n\r\n  const [Open, setOpen] = useState(false);\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      open: () => setOpen(true),\r\n    };\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   document.body.style.overflow = 'hidden';\r\n  //   return() => {\r\n  //     document.body.style.overflow = 'auto';\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    Open ? (document.body.style.overflow = 'hidden')\r\n        : (document.body.style.overflow = 'auto');\r\n  }, [Open]);\r\n  \r\n  return(\r\n    // 모션을 걸고 싶은 요소를 AnimatePresence로 감싸준다. 그리고 모션을 걸 요소의 앞에 motion. 을 붙여준다.\r\n    // initial에 \r\n    <AnimatePresence>\r\n      {Open && (\r\n        <motion.aside className=\"pop\" \r\n          initial={{ opacity: 0, scale: 0, }} \r\n          animate={{ opacity: 1, scale: 1, transition: { duration: 1 } }} \r\n          exit={{ opacity: 0, scale: 0, transition: { duration: 0.5, delay: 0.5 } }}>\r\n          <motion.div className=\"con\"\r\n          initial={{opacity: 0}}\r\n          animate={{opacity: 1, transition: { duration: 0.5, delay: 1 }}}\r\n          exit={{opacity: 0, transition: { delay: 0 }}}\r\n          >{props.children}</motion.div>\r\n          <motion.span\r\n            initial={{ x: 50, opacity: 0 }}\r\n            animate={{ x: 0, opacity: 1, transition: { delay: 1.5 } }}\r\n            className=\"close\" onClick={() => { setOpen(false) }}>close</motion.span>\r\n        </motion.aside>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n});\r\n\r\n\r\nexport default Popup;\r\n\r\n/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/"],"mappings":"8LAAA;AAEA,OAASA,QAAQ,CAAEC,UAAU,CAAEC,SAAS,CAAEC,mBAAmB,KAAQ,OAAO,CAC5E,OAAQC,MAAM,CAAEC,eAAe,KAAO,eAAe,CAAC,wFAEtD,GAAMC,MAAK,cAAGL,UAAU,CAAC,SAACM,KAAK,CAAEC,GAAG,CAAK,CAEvC,cAAwBR,QAAQ,CAAC,KAAK,CAAC,wCAAhCS,IAAI,eAAEC,OAAO,eACpBP,mBAAmB,CAACK,GAAG,CAAE,UAAM,CAC7B,MAAO,CACLG,IAAI,CAAE,sBAAMD,QAAO,CAAC,IAAI,CAAC,EAC3B,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AAEAR,SAAS,CAAC,UAAM,CACdO,IAAI,CAAIG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,QAAQ,CACxCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,MAAO,CAC/C,CAAC,CAAE,CAACN,IAAI,CAAC,CAAC,CAEV,oBACE;AACA;AACA,KAAC,eAAe,WACbA,IAAI,eACH,MAAC,MAAM,CAAC,KAAK,EAAC,SAAS,CAAC,KAAK,CAC3B,OAAO,CAAE,CAAEO,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAG,CAAE,CACnC,OAAO,CAAE,CAAED,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAEC,QAAQ,CAAE,CAAE,CAAE,CAAE,CAC/D,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,KAAK,CAAE,GAAI,CAAE,CAAE,wBAC1E,KAAC,MAAM,CAAC,GAAG,EAAC,SAAS,CAAC,KAAK,CAC3B,OAAO,CAAE,CAACJ,OAAO,CAAE,CAAC,CAAE,CACtB,OAAO,CAAE,CAACA,OAAO,CAAE,CAAC,CAAEE,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAE,CAC/D,IAAI,CAAE,CAACJ,OAAO,CAAE,CAAC,CAAEE,UAAU,CAAE,CAAEE,KAAK,CAAE,CAAE,CAAC,CAAE,UAC3Cb,KAAK,CAACc,QAAQ,EAAc,cAC9B,KAAC,MAAM,CAAC,IAAI,EACV,OAAO,CAAE,CAAEC,CAAC,CAAE,EAAE,CAAEN,OAAO,CAAE,CAAE,CAAE,CAC/B,OAAO,CAAE,CAAEM,CAAC,CAAE,CAAC,CAAEN,OAAO,CAAE,CAAC,CAAEE,UAAU,CAAE,CAAEE,KAAK,CAAE,GAAI,CAAE,CAAE,CAC1D,SAAS,CAAC,OAAO,CAAC,OAAO,CAAE,kBAAM,CAAEV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAE,mBAAoB,GAE7E,EACe,EAEtB,CAAC,CAAC,CAGF,cAAeJ,MAAK,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}