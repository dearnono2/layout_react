{"ast":null,"code":"import{useRef,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Layout(props){var frame=useRef(null);useEffect(function(){// 마운트 되었을 때\nframe.current.classList.add('on');},[]);return/*#__PURE__*/_jsxs(\"section\",{className:\"content \".concat(props.name),ref:frame,children:[/*#__PURE__*/_jsx(\"figure\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"inner\",children:[/*#__PURE__*/_jsx(\"h1\",{children:props.name}),props.children]})]});}export default Layout;/**\r\nuseEffect\r\n\r\n- 컴포넌트가 마운트 되었을 때\r\n=> 처음나타났을 때 <---\r\n=> props로 받은 값을 컴포넌트의 로컬상태로 설정할 때\r\n=> 외부 API요청이 있을 때\r\n=> setInterval, setTimeout을 통해 작업이 예약될 때\r\n\r\n- 컴포넌트가 언마운트 되었을 때\r\n=> 사라질 때\r\n=> setInterval, setTimeout을 사용하여 등록한 작업들이 클리어 되었을 때\r\n=> 라이브러리 인스턴스가 제거되었을 때\r\n\r\n- 컴포넌트가 업데이트될 때\r\n=> 특정 props가 바뀔 때\r\n\r\nuseRef\r\n\r\n- js로 비유하자면 쿼리셀렉터로 해당 돔을 선택하는 용도(참조)\r\n- 변수를 저장하는 용도로 사용하는 이유: 렌더링을 발생시키지 않음. 변하지 않음.\r\ncurrent : ()  <=== 해당값이 저장됨.\r\n\r\n*/","map":{"version":3,"names":["useRef","useEffect","Layout","props","frame","current","classList","add","name","children"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/common/Layout.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\nfunction Layout(props) {\r\n  const frame = useRef(null);\r\n\r\n  useEffect (() => {\r\n    // 마운트 되었을 때\r\n    frame.current.classList.add('on');\r\n  }, []);\r\n\r\n  return (\r\n    <section className={`content ${props.name}`} ref={frame}>\r\n      <figure></figure>\r\n      <div className=\"inner\">\r\n        <h1>{props.name}</h1>\r\n        {props.children}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Layout;\r\n\r\n/**\r\nuseEffect\r\n\r\n- 컴포넌트가 마운트 되었을 때\r\n=> 처음나타났을 때 <---\r\n=> props로 받은 값을 컴포넌트의 로컬상태로 설정할 때\r\n=> 외부 API요청이 있을 때\r\n=> setInterval, setTimeout을 통해 작업이 예약될 때\r\n\r\n- 컴포넌트가 언마운트 되었을 때\r\n=> 사라질 때\r\n=> setInterval, setTimeout을 사용하여 등록한 작업들이 클리어 되었을 때\r\n=> 라이브러리 인스턴스가 제거되었을 때\r\n\r\n- 컴포넌트가 업데이트될 때\r\n=> 특정 props가 바뀔 때\r\n\r\nuseRef\r\n\r\n- js로 비유하자면 쿼리셀렉터로 해당 돔을 선택하는 용도(참조)\r\n- 변수를 저장하는 용도로 사용하는 이유: 렌더링을 발생시키지 않음. 변하지 않음.\r\ncurrent : ()  <=== 해당값이 저장됨.\r\n\r\n*/"],"mappings":"AAAA,OAASA,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAAC,wFAE1C,QAASC,OAAM,CAACC,KAAK,CAAE,CACrB,GAAMC,MAAK,CAAGJ,MAAM,CAAC,IAAI,CAAC,CAE1BC,SAAS,CAAE,UAAM,CACf;AACAG,KAAK,CAACC,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC,CACnC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,iBAAS,SAAS,mBAAaJ,KAAK,CAACK,IAAI,CAAG,CAAC,GAAG,CAAEJ,KAAM,wBACtD,iBAAiB,cACjB,aAAK,SAAS,CAAC,OAAO,wBACpB,oBAAKD,KAAK,CAACK,IAAI,EAAM,CACpBL,KAAK,CAACM,QAAQ,GACX,GACE,CAEd,CACA,cAAeP,OAAM,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}