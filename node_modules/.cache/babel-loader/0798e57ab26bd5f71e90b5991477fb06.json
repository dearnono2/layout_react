{"ast":null,"code":"import _toConsumableArray from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useRef,useState}from\"react\";import Layout from\"../common/Layout\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Community(){var getLocalData=function getLocalData(){var dummyPosts=[{title:'Hello5',content:'Here comes description in details'},{title:'Hello4',content:'Here comes description in details'},{title:'Hello3',content:'Here comes description in details'},{title:'Hello2',content:'Here comes description in details'},{title:'Hello1',content:'Here comes description in details'}];var data=localStorage.getItem('post');if(data){return JSON.parse(data);}else{return dummyPosts;}};/**\r\n  보통 데이터들은 새로고침이나 재접속시 초기화 된다. <== section storage 브라우저를 종료하면 날라가는 휘발성 저장공간. \r\n\r\n  이러한 데이터를 기억하기 위해서는 \r\n  1.서버로 보내서 데이터 베이스에 저장\r\n  2.브라우저가 가지고 있는 임시저장공간 즉 localstorage에 저장한다. \r\n  브라우저를 청소하거나 직접 localstorage를 지우지 않는한 사라지지 않음. 5mb정도 '텍스트'를 저장할 수 있다.\r\n  */var input=useRef(null);var textarea=useRef(null);var inputEdit=useRef(null);var textareaEdit=useRef(null);var _useState=useState(getLocalData()),_useState2=_slicedToArray(_useState,2),Posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),Allowed=_useState4[0],setAllowed=_useState4[1];var resetForm=function resetForm(){input.current.value='';textarea.current.value='';// 초기화 함수에서 해당모드 즉 해당 값을 참조했을 때만 초기화 되도록\nif(inputEdit.current){inputEdit.current.value='';textareaEdit.current.value='';}};// 글 저장 함수\nvar createPost=function createPost(){if(!input.current.value.trim()||!textarea.current.value.trim()){resetForm();return alert('제목과 본문을 모두 입력하세요');}setPosts([{title:input.current.value,content:textarea.current.value}].concat(_toConsumableArray(Posts)));resetForm();};// 글 삭제 함수\nvar deletePost=function deletePost(index){console.log(index);// 값은 안쓰기 때문에 그냥 _ 언더바를 쓴다. post나 등등 다른 값으로 이름지어줘도 되지만 _가 개발자들의 약속이다.\nsetPosts(Posts.filter(function(_,idx){return idx!==index;}));/** \r\n    filter() 메서드는 자바스크립트 배열의 내장함수이다. \r\n    주어진 함수의 테스트를 통과하는 모든 요소를 모아 true면 요소를 유지하고 false면 버린다. \r\n    새로운 배열로 변환하기 때문에 전개연산자를 쓰지 않아도 불변성이 유지된다. \r\n    처리할 대상이 되는 배열.filter((처리할 요소값, 요소의 인덱스) => 조건값. 즉 테스트값)\r\n\r\n    글 삭제함수로 들어온 index는 밑에 delete버튼을 클릭한 특정인덱스 값이다. \r\n    idx는 filter 안에서 반복을 돌리고 있는 순번을 나타낸다. \r\n    idx !== index는\r\n    filter는 조건이 참이면 유지하고 거짓이면 지우기 때문에 지워야하는 인덱스가 반복을 돌리고 있는 인덱스와 같은 값이 되면 false라는 요건을 충족시켜야한다.\r\n    */};// 수정모드 변경 함수\nvar enableUpdate=function enableUpdate(index){if(!Allowed)return;// false이면 return으로 막음. \nsetAllowed(false);setPosts(Posts.map(function(post,idx){if(idx===index)post.enableUpdate=true;return post;}));};var disableUpdate=function disableUpdate(index){setAllowed(true);setPosts(Posts.map(function(post,idx){if(idx===index)post.enableUpdate=false;return post;}));};// 실제 글 수정함수\nvar updatePost=function updatePost(index){if(!inputEdit.current.value.trim()||!textareaEdit.current.value.trim()){resetForm();return alert('수정할 제목과 본문을 모두 입력하세요');}setPosts(Posts.map(function(post,idx){if(idx===index){// 수정한 곳(inputEdit의 값을 post의 값에다가 대입해줌)\npost.title=inputEdit.current.value;// 수정한 곳(textareaEdit의 값을 post의 값에다가 대입해줌)\npost.content=textareaEdit.current.value;// 수정 불가능 false\npost.enableUpdate=false;}return post;}));};// Posts의 값이 변경될 때마다 콘솔출력해서 우리가 볼 수 있는 useEffect를 만든다.\nuseEffect(function(){console.log(Posts);/**\r\n    데이터를 스토리지에 저장하기 : setItem('key', 'value');\r\n    JSON.stringify(Posts) 메소드로 문자화시켜서 \r\n    */localStorage.setItem('post',JSON.stringify(Posts));},[Posts]);return/*#__PURE__*/_jsxs(Layout,{name:'Community',children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inputBox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",ref:input}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{cols:\"30\",rows:\"5\",placeholder:\"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",ref:textarea}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnSet\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:resetForm,children:\"CANCLE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createPost,children:\"WRITE\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"showBox\",children:Posts.map(function(post,idx){return/*#__PURE__*/_jsx(\"article\",{children:post.enableUpdate?/*#__PURE__*/ // 반복도는 post에서 enableUpdate값이 있으면 수정모드로 랜더링\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editTxt\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:post.title,ref:inputEdit}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{cols:\"30\",rows:\"4\",defaultValue:post.content,ref:textareaEdit})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnSet\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return disableUpdate(idx);},children:\"CANCLE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return updatePost(idx);},children:\"UPDATE\"})]})]}):/*#__PURE__*/ // 반복도는 post에서 enableUpdate = false거나 없으면 일반 출력모드로 랜더링\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"txt\",children:[/*#__PURE__*/_jsx(\"h2\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.content})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnSet\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return enableUpdate(idx);},children:\"EDIT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deletePost(idx);},children:\"DELETE\"})]})]})},idx);})})]});}","map":{"version":3,"names":["useEffect","useRef","useState","Layout","Community","getLocalData","dummyPosts","title","content","data","localStorage","getItem","JSON","parse","input","textarea","inputEdit","textareaEdit","Posts","setPosts","Allowed","setAllowed","resetForm","current","value","createPost","trim","alert","deletePost","index","console","log","filter","_","idx","enableUpdate","map","post","disableUpdate","updatePost","setItem","stringify"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/sub/Community.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Layout from \"../common/Layout\"\r\n\r\nexport default function Community() {\r\n\r\n  const getLocalData = () => {\r\n    const dummyPosts = [\r\n      {title: 'Hello5', content: 'Here comes description in details'},\r\n      {title: 'Hello4', content: 'Here comes description in details'},\r\n      {title: 'Hello3', content: 'Here comes description in details'},\r\n      {title: 'Hello2', content: 'Here comes description in details'},\r\n      {title: 'Hello1', content: 'Here comes description in details'},\r\n    ];\r\n\r\n    const data = localStorage.getItem('post');\r\n    if(data) {\r\n      return JSON.parse(data)\r\n    } else {\r\n      return dummyPosts;\r\n    }\r\n    \r\n  };\r\n  /**\r\n  보통 데이터들은 새로고침이나 재접속시 초기화 된다. <== section storage 브라우저를 종료하면 날라가는 휘발성 저장공간. \r\n\r\n  이러한 데이터를 기억하기 위해서는 \r\n  1.서버로 보내서 데이터 베이스에 저장\r\n  2.브라우저가 가지고 있는 임시저장공간 즉 localstorage에 저장한다. \r\n  브라우저를 청소하거나 직접 localstorage를 지우지 않는한 사라지지 않음. 5mb정도 '텍스트'를 저장할 수 있다.\r\n  */\r\n\r\n\r\n  const input = useRef(null);\r\n  const textarea = useRef(null);\r\n  const inputEdit = useRef(null);\r\n  const textareaEdit = useRef(null);\r\n  const [Posts, setPosts] = useState(getLocalData()); \r\n  const [Allowed, setAllowed] = useState(true);\r\n\r\n  const resetForm = () => {\r\n    input.current.value = '';\r\n    textarea.current.value = '';\r\n    // 초기화 함수에서 해당모드 즉 해당 값을 참조했을 때만 초기화 되도록\r\n    if(inputEdit.current) {\r\n      inputEdit.current.value = '';\r\n      textareaEdit.current.value = '';\r\n    }\r\n  }\r\n\r\n  // 글 저장 함수\r\n  const createPost = () => {\r\n\r\n    if(!input.current.value.trim() || !textarea.current.value.trim()) {\r\n      resetForm();\r\n      return alert('제목과 본문을 모두 입력하세요');\r\n    }\r\n\r\n    setPosts([\r\n      \r\n      {\r\n        title : input.current.value,\r\n        content : textarea.current.value\r\n      },\r\n      ...Posts,\r\n    ]);\r\n    resetForm();\r\n  };\r\n\r\n  // 글 삭제 함수\r\n  const deletePost = (index) => {\r\n    console.log(index)\r\n    // 값은 안쓰기 때문에 그냥 _ 언더바를 쓴다. post나 등등 다른 값으로 이름지어줘도 되지만 _가 개발자들의 약속이다.\r\n    setPosts(Posts.filter((_, idx) => idx !== index));\r\n    /** \r\n    filter() 메서드는 자바스크립트 배열의 내장함수이다. \r\n    주어진 함수의 테스트를 통과하는 모든 요소를 모아 true면 요소를 유지하고 false면 버린다. \r\n    새로운 배열로 변환하기 때문에 전개연산자를 쓰지 않아도 불변성이 유지된다. \r\n    처리할 대상이 되는 배열.filter((처리할 요소값, 요소의 인덱스) => 조건값. 즉 테스트값)\r\n\r\n    글 삭제함수로 들어온 index는 밑에 delete버튼을 클릭한 특정인덱스 값이다. \r\n    idx는 filter 안에서 반복을 돌리고 있는 순번을 나타낸다. \r\n    idx !== index는\r\n    filter는 조건이 참이면 유지하고 거짓이면 지우기 때문에 지워야하는 인덱스가 반복을 돌리고 있는 인덱스와 같은 값이 되면 false라는 요건을 충족시켜야한다.\r\n    */\r\n  }\r\n\r\n  // 수정모드 변경 함수\r\n  const enableUpdate = (index) => {\r\n    if(!Allowed) return; // false이면 return으로 막음. \r\n    setAllowed(false);\r\n    setPosts(\r\n      Posts.map((post, idx) => {\r\n        if(idx === index) post.enableUpdate = true;\r\n        return post;\r\n      })\r\n    );\r\n  }\r\n\r\n  const disableUpdate = (index) => {\r\n    setAllowed(true)\r\n    setPosts(\r\n      Posts.map((post, idx) => {\r\n        if(idx === index) post.enableUpdate = false;\r\n        return post;\r\n      })\r\n    );\r\n  }\r\n\r\n  // 실제 글 수정함수\r\n  const updatePost = (index) => {\r\n    if(!inputEdit.current.value.trim() || !textareaEdit.current.value.trim()) {\r\n      resetForm();\r\n      return alert('수정할 제목과 본문을 모두 입력하세요');\r\n    }\r\n    setPosts(\r\n      Posts.map((post,idx) => {\r\n        if(idx === index) {\r\n          // 수정한 곳(inputEdit의 값을 post의 값에다가 대입해줌)\r\n          post.title = inputEdit.current.value;\r\n          // 수정한 곳(textareaEdit의 값을 post의 값에다가 대입해줌)\r\n          post.content = textareaEdit.current.value;\r\n          // 수정 불가능 false\r\n          post.enableUpdate = false;\r\n        }\r\n        return post;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Posts의 값이 변경될 때마다 콘솔출력해서 우리가 볼 수 있는 useEffect를 만든다.\r\n  useEffect(() => {\r\n    console.log(Posts);\r\n\r\n    /**\r\n    데이터를 스토리지에 저장하기 : setItem('key', 'value');\r\n    JSON.stringify(Posts) 메소드로 문자화시켜서 \r\n    */\r\n\r\n    localStorage.setItem('post', JSON.stringify(Posts));\r\n\r\n  }, [Posts])\r\n\r\n  return (\r\n    <Layout name={'Community'}>\r\n      <div className=\"inputBox\">\r\n        <input type=\"text\" placeholder=\"제목을 입력하세요\" ref={input} />\r\n        <br />\r\n        <textarea cols=\"30\" rows=\"5\" placeholder=\"본문을 입력하세요\" ref={textarea}></textarea>\r\n        <br />\r\n        <div className=\"btnSet\">\r\n          <button onClick={resetForm}>CANCLE</button>\r\n          <button onClick={createPost}>WRITE</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"showBox\">\r\n        {Posts.map((post, idx) => {\r\n          return(\r\n            <article key={idx}>\r\n\r\n              {\r\n                post.enableUpdate ? (\r\n                  // 반복도는 post에서 enableUpdate값이 있으면 수정모드로 랜더링\r\n                  <>\r\n                    <div className=\"editTxt\">\r\n                      <input type=\"text\" defaultValue={post.title} ref={inputEdit} />\r\n                      <br />\r\n                      <textarea cols=\"30\" rows=\"4\" defaultValue={post.content} ref={textareaEdit}>\r\n\r\n                      </textarea>\r\n                    </div>\r\n                    <div className=\"btnSet\">\r\n                      <button onClick={() => disableUpdate(idx)}>CANCLE</button>\r\n                      <button onClick={() => updatePost(idx)}>UPDATE</button>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  // 반복도는 post에서 enableUpdate = false거나 없으면 일반 출력모드로 랜더링\r\n                  <>\r\n                    <div className=\"txt\">\r\n                      <h2>{post.title}</h2>\r\n                      <p>{post.content}</p>\r\n                    </div>\r\n                    <div className=\"btnSet\">\r\n                      <button onClick={() => enableUpdate(idx)}>EDIT</button>\r\n                      <button onClick={() => deletePost(idx)}>DELETE</button>\r\n                    </div>\r\n                  </>\r\n                )\r\n              }\r\n\r\n              {/* <div className=\"txt\">\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n              </div>\r\n\r\n              <div className=\"btnSet\">\r\n                <button onClick={() => enableUpdate(idx)}>EDIT</button>\r\n                <button onClick={() => deletePost(idx)}>DELETE</button>\r\n              </div> */}\r\n            </article>\r\n          );\r\n          \r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}