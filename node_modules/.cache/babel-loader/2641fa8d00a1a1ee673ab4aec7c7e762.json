{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/YS/Desktop/\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0/221013 17\\uC77C\\uCC28/layout_react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Layout from\"../common/Layout\";import Popup from\"../common/Popup\";import axios from'axios';import{useState,useEffect,useRef}from\"react\";import Masonry from'react-masonry-component';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Gallery(){var masonryOptions={transitionDuration:'0.5s'};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Items=_useState2[0],setItems=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),Loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),EnableClick=_useState6[0],setEnableClick=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),Index=_useState8[0],setIndex=_useState8[1];var frame=useRef(null);var input=useRef(null);var pop=useRef(null);/*\r\n  interest 방식 호출\r\n  getFlickr({\r\n    type: 'interest',\r\n  })\r\n  search 방식 버튼\r\n  getFlickr({\r\n    type:'search',\r\n    tags: '검색키워드',\r\n  })\r\n  */var getFlickr=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(opt){var key,method_interest,method_search,method_user,num,url,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:key='2b77b0bf16caab8d0940ed8495c064dc';method_interest='flickr.interestingness.getList';method_search='flickr.photos.search';method_user='flickr.people.getPhotos';num=20;// 깨질 수 있으니 사진은 40장 아래로\nurl='';if(opt.type==='interest'){url=\"https://www.flickr.com/services/rest/?method=\".concat(method_interest,\"&per_page=\").concat(num,\"&api_key=\").concat(key,\"&format=json&nojsoncallback=1\");}if(opt.type==='search'){url=\"https://www.flickr.com/services/rest/?method=\".concat(method_search,\"&per_page=\").concat(num,\"&api_key=\").concat(key,\"&format=json&nojsoncallback=1&tags=\").concat(opt.tags);}if(opt.type==='user'){url=\"https://www.flickr.com/services/rest/?method=\".concat(method_search,\"&per_page=\").concat(num,\"&api_key=\").concat(key,\"&format=json&nojsoncallback=1&user_id=\").concat(opt.user);}// await axios.get(url).then((json) => {\n//   setItems(result.data.photos.photo);\n// })\n_context.next=11;return axios.get(url);case 11:result=_context.sent;if(!(result.data.photos.photo.length===0)){_context.next=14;break;}return _context.abrupt(\"return\",alert('해당 검색어의 결과 이미지가 없습니다'));case 14:setItems(result.data.photos.photo);// 셋타임아웃으로 비동기화 시키고 1초 딜레이를 준 뒤 로딩바를 안보이게 false로 바꾼 뒤에 on을 프레임에 붙여서 보이게한다.\nsetTimeout(function(){setLoading(false);frame.current.classList.add('on');setTimeout(function(){setEnableClick(true);},500);// 프레임에 on 붙이고 위로 올라오는 모션기간동안 0.5초 홀딩\n},1000);// 이미지 호출이 완료되고 masonry모션 적용시간까지 홀딩하는 1초\ncase 16:case\"end\":return _context.stop();}}},_callee);}));return function getFlickr(_x){return _ref.apply(this,arguments);};}();useEffect(function(){return getFlickr({type:'user',user:'196712274@N08'});},[]);// 초기화면. 초반에 나타나는 이미지를 유저 자신의 이미지로 했다.\n//함수의 정의 형태로 콜백함수가 들어와야 한다, 함수를 단순 호출하는 형태는 읽어들일 수 없다\nvar showSearch=function showSearch(){var result=input.current.value.trim();input.current.value='';if(!result)return alert('검색어를 입력하세요');if(!EnableClick)return;setEnableClick(false);setLoading(true);frame.current.classList.remove('on');getFlickr({type:'search',tags:result});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Layout,{name:'Gallery',children:[Loading&&/*#__PURE__*/_jsx(\"img\",{className:\"loading\",src:\"\".concat(process.env.PUBLIC_URL,\"/img/6.gif\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if(!EnableClick)return;// 모션중이면 false일태나 return으로 방지\nsetEnableClick(false);// true로 들어와서 다시 false로 바꾸어 재이벤트 방지\nsetLoading(true);frame.current.classList.remove('on');getFlickr({type:'interest'});},children:\"Interest Gallery\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if(!EnableClick)return;setEnableClick(false);setLoading(true);frame.current.classList.remove('on');getFlickr({type:'search',tags:'landscape'});// 내 갤러리로 보이게 하고싶으면 tags에 landscape 대신 196712274@N08 를 넣어준다.\n},children:\"Search Gallery\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchBox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:input,placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",onKeyUp:function onKeyUp(e){if(e.key==='Enter')showSearch();}}),/*#__PURE__*/_jsx(\"button\",{onClick:showSearch,children:\"Search\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"frame\",ref:frame,children:/*#__PURE__*/_jsx(Masonry,{elementType:'div',options:masonryOptions,children:Items.map(function(item,idx){return/*#__PURE__*/_jsx(\"article\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pic\",onClick:function onClick(){pop.current.open();setIndex(idx);},children:/*#__PURE__*/_jsx(\"img\",{src:\"https://live.staticflickr.com/\".concat(item.server,\"/\").concat(item.id,\"_\").concat(item.secret,\"_m.jpg\"),alt:item.title})}),/*#__PURE__*/_jsx(\"h2\",{children:item.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"http://farm\".concat(item.farm,\".staticflickr.com/\").concat(item.server,\"/buddyicons/\").concat(item.owner,\".jpg\"),alt:item.owner,onError:function onError(e){e.target.setAttribute('src','https://www.flickr.com/images/buddyicon.gif');}}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(e){if(!EnableClick)return;setEnableClick(false);setLoading(true);frame.current.classList.remove('on');getFlickr({type:'user',user:e.target.innerText});},children:item.owner})]})]})},idx);})})})]}),/*#__PURE__*/_jsx(Popup,{ref:pop,children:Items.length!==0&&/*#__PURE__*/_jsx(\"img\",{src:\"https://live.staticflickr.com/\".concat(Items[Index].server,\"/\").concat(Items[Index].id,\"_\").concat(Items[Index].secret,\"_b.jpg\"),alt:Items[Index].title})})]});}/*\r\n\r\n? 형태는 쿼리스트링하는 형태의 방법이다. \r\n쿼리 스트링은 ??\r\n\r\n사용자가 입력 데이터를 전달하는 방법중의 하나로 url 주소에 미리 협의된 데이터를 파라미터를 통해 넘기는 것을 말한다. \r\n파라미터는 물음표 뒤에 = 으로 연결된 key value 부분을 말한다. \r\nurl에 붙여서 추가적인 정보를 서버측에 전달하는 내용이다. \r\n클라이언트가 어떤 특정 리소스에 접근하고 싶어하는지의 정보를 담는것. \r\n\r\n형식(방법)\r\n- 정해진 엔드포인트 주소 이후에 ?를 쓰는 것으로 쿼리스트링이 시작함을 알린다. \r\n- parameter = value로 필요한 파라미터의 값을 적는다. \r\n- 파라미터가 여러개일 경우 &를 붙여서 여러개의 파라미터를 넘길 수 있다. \r\n- 엔드포인트주소/ 추가적인주소 ? 파라미터=값&파라미터=값\r\n\r\n*/","map":{"version":3,"names":["Layout","Popup","axios","useState","useEffect","useRef","Masonry","Gallery","masonryOptions","transitionDuration","Items","setItems","Loading","setLoading","EnableClick","setEnableClick","Index","setIndex","frame","input","pop","getFlickr","opt","key","method_interest","method_search","method_user","num","url","type","tags","user","get","result","data","photos","photo","length","alert","setTimeout","current","classList","add","showSearch","value","trim","remove","process","env","PUBLIC_URL","e","map","item","idx","open","server","id","secret","title","farm","owner","target","setAttribute","innerText"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/sub/Gallery.js"],"sourcesContent":["import Layout from \"../common/Layout\";\r\nimport Popup from \"../common/Popup\";\r\nimport axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\n\r\nexport default function Gallery() {\r\n  const masonryOptions = { transitionDuration: '0.5s' };\r\n  const [Items, setItems] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [EnableClick, setEnableClick] = useState(true);\r\n  const [Index, setIndex] = useState(0);\r\n  const frame = useRef(null);\r\n  const input = useRef(null);\r\n  const pop = useRef(null);\r\n\r\n    /*\r\n  interest 방식 호출\r\n  getFlickr({\r\n    type: 'interest',\r\n  })\r\n  search 방식 버튼\r\n  getFlickr({\r\n    type:'search',\r\n    tags: '검색키워드',\r\n  })\r\n  */\r\n\r\n  const getFlickr = async (opt) => {\r\n    const key = '2b77b0bf16caab8d0940ed8495c064dc';\r\n    const method_interest = 'flickr.interestingness.getList';\r\n    const method_search = 'flickr.photos.search';\r\n    const method_user ='flickr.people.getPhotos';\r\n    const num = 20;  // 깨질 수 있으니 사진은 40장 아래로\r\n    let url = '';\r\n\r\n    if (opt.type === 'interest') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\r\n  }\r\n    if (opt.type === 'search') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&tags=${opt.tags}`;\r\n    }\r\n\r\n    if (opt.type === 'user') {\r\n      url = `https://www.flickr.com/services/rest/?method=${method_search}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${opt.user}`;\r\n    }\r\n\r\n    // await axios.get(url).then((json) => {\r\n    //   setItems(result.data.photos.photo);\r\n    // })\r\n\r\n    const result = await axios.get(url);\r\n    if (result.data.photos.photo.length === 0) return alert('해당 검색어의 결과 이미지가 없습니다');\r\n    setItems(result.data.photos.photo);\r\n    \r\n    // 셋타임아웃으로 비동기화 시키고 1초 딜레이를 준 뒤 로딩바를 안보이게 false로 바꾼 뒤에 on을 프레임에 붙여서 보이게한다.\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      frame.current.classList.add('on');\r\n\r\n      setTimeout(() => {\r\n        setEnableClick(true);\r\n      }, 500) // 프레임에 on 붙이고 위로 올라오는 모션기간동안 0.5초 홀딩\r\n\r\n    }, 1000) // 이미지 호출이 완료되고 masonry모션 적용시간까지 홀딩하는 1초\r\n\r\n  };\r\n\r\n  useEffect(() => getFlickr({ type: 'user', user: '196712274@N08' }), []); // 초기화면. 초반에 나타나는 이미지를 유저 자신의 이미지로 했다.\r\n  //함수의 정의 형태로 콜백함수가 들어와야 한다, 함수를 단순 호출하는 형태는 읽어들일 수 없다\r\n  const showSearch = () => {\r\n    const result = input.current.value.trim();\r\n    input.current.value = '';\r\n\r\n    if(!result) return alert('검색어를 입력하세요');\r\n\r\n    if(!EnableClick) return;\r\n    setEnableClick(false);\r\n    setLoading(true);\r\n    frame.current.classList.remove('on');\r\n    getFlickr({ type: 'search', tags: result, });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout name={'Gallery'}>\r\n        {Loading && (\r\n          <img\r\n            className=\"loading\"\r\n            src={`${process.env.PUBLIC_URL}/img/6.gif`}\r\n          />\r\n        )}\r\n\r\n        <div className=\"controls\">\r\n          <nav>\r\n            <button\r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                // 모션중이면 false일태나 return으로 방지\r\n                setEnableClick(false);\r\n                // true로 들어와서 다시 false로 바꾸어 재이벤트 방지\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'interest' });\r\n              }}>\r\n                Interest Gallery\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                if(!EnableClick) return;\r\n                setEnableClick(false);\r\n                setLoading(true);\r\n                frame.current.classList.remove('on');\r\n                getFlickr({ type: 'search', tags: 'landscape' }); // 내 갤러리로 보이게 하고싶으면 tags에 landscape 대신 196712274@N08 를 넣어준다.\r\n              }}>\r\n                Search Gallery\r\n            </button>\r\n          </nav>\r\n          <div className=\"searchBox\">\r\n            <input type=\"text\" ref={input} placeholder='검색어를 입력하세요' onKeyUp={(e) => {\r\n              if(e.key === 'Enter') showSearch();\r\n            }} />\r\n            <button \r\n              onClick={showSearch}>\r\n                Search \r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"frame\" ref={frame}>\r\n          <Masonry elementType={'div'} options={masonryOptions}>\r\n\r\n            {Items.map((item, idx) => {\r\n              return (\r\n                <article key={idx}>\r\n                  <div className=\"inner\">\r\n                    <div className=\"pic\" onClick={() => {\r\n                      pop.current.open();\r\n                      setIndex(idx);\r\n                    }}>\r\n                      {/* 여기서부터 다시 보고 작성하자... */}\r\n                      <img \r\n                        src={`https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}_m.jpg`} \r\n                        alt={item.title} />\r\n                    </div>\r\n                    <h2>{item.title}</h2>\r\n\r\n                    <div className=\"profile\">\r\n                      <img src={`http://farm${item.farm}.staticflickr.com/${item.server}/buddyicons/${item.owner}.jpg`} alt={item.owner}\r\n                        onError={(e) => {\r\n                          e.target.setAttribute(\r\n                            'src',\r\n                            'https://www.flickr.com/images/buddyicon.gif'\r\n                          );\r\n                        }}\r\n                      />\r\n                      <span onClick={(e) => {\r\n                        if(!EnableClick) return;\r\n                        setEnableClick(false);\r\n                        setLoading(true);\r\n                        frame.current.classList.remove('on');\r\n                        getFlickr({ type: 'user', user: e.target.innerText });\r\n                      }}\r\n                      >{item.owner}</span>\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n              )\r\n            })}\r\n          </Masonry>\r\n        </div>\r\n      </Layout>\r\n    \r\n      <Popup ref={pop}>\r\n        {Items.length !== 0 && (\r\n        <img\r\n          src={`https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`}\r\n          alt={Items[Index].title} />\r\n        )}\r\n      </Popup>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n/*\r\n\r\n? 형태는 쿼리스트링하는 형태의 방법이다. \r\n쿼리 스트링은 ??\r\n\r\n사용자가 입력 데이터를 전달하는 방법중의 하나로 url 주소에 미리 협의된 데이터를 파라미터를 통해 넘기는 것을 말한다. \r\n파라미터는 물음표 뒤에 = 으로 연결된 key value 부분을 말한다. \r\nurl에 붙여서 추가적인 정보를 서버측에 전달하는 내용이다. \r\n클라이언트가 어떤 특정 리소스에 접근하고 싶어하는지의 정보를 담는것. \r\n\r\n형식(방법)\r\n- 정해진 엔드포인트 주소 이후에 ?를 쓰는 것으로 쿼리스트링이 시작함을 알린다. \r\n- parameter = value로 필요한 파라미터의 값을 적는다. \r\n- 파라미터가 여러개일 경우 &를 붙여서 여러개의 파라미터를 넘길 수 있다. \r\n- 엔드포인트주소/ 추가적인주소 ? 파라미터=값&파라미터=값\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}