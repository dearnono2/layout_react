{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YS\\\\Desktop\\\\\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0\\\\221013 17\\uC77C\\uCC28\\\\react_tmp\\\\src\\\\components\\\\common\\\\Layout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout(props) {\n  _s();\n  const frame = useRef(null);\n  useEffect(() => {\n    // 마운트 되었을 때\n    return () => {\n      // 언마운트 되었을 때\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `content ${props.name}`,\n    ref: frame,\n    children: [/*#__PURE__*/_jsxDEV(\"figure\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"GrNPVr5X+L+veAMr8WB4nRT2xOQ=\");\n_c = Layout;\nexport default Layout;\n\n/**\r\nuseEffect\r\n\r\n- 컴포넌트가 마운트 되었을 때\r\n=> 처음나타났을 때 <---\r\n=> props로 받은 값을 컴포넌트의 로컬상태로 설정할 때\r\n=> 외부 API요청이 있을 때\r\n=> setInterval, setTimeout을 통해 작업이 예약될 때\r\n\r\n- 컴포넌트가 언마운트 되었을 때\r\n=> 사라질 때\r\n=> setInterval, setTimeout을 사용하여 등록한 작업들이 클리어 되었을 때\r\n=> 라이브러리 인스턴스가 제거되었을 때\r\n\r\n- 컴포넌트가 업데이트될 때\r\n=> 특정 props가 바뀔 때\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["useRef","useEffect","Layout","props","frame","name","children"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/react_tmp/src/components/common/Layout.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\nfunction Layout(props) {\r\n  const frame = useRef(null);\r\n\r\n  useEffect ( () => {\r\n    // 마운트 되었을 때\r\n    return() => {\r\n    // 언마운트 되었을 때\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className={`content ${props.name}`} ref={frame}>\r\n      <figure></figure>\r\n      <div className=\"inner\">\r\n        <h1>{props.name}</h1>\r\n        {props.children}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Layout;\r\n\r\n/**\r\nuseEffect\r\n\r\n- 컴포넌트가 마운트 되었을 때\r\n=> 처음나타났을 때 <---\r\n=> props로 받은 값을 컴포넌트의 로컬상태로 설정할 때\r\n=> 외부 API요청이 있을 때\r\n=> setInterval, setTimeout을 통해 작업이 예약될 때\r\n\r\n- 컴포넌트가 언마운트 되었을 때\r\n=> 사라질 때\r\n=> setInterval, setTimeout을 사용하여 등록한 작업들이 클리어 되었을 때\r\n=> 라이브러리 인스턴스가 제거되었을 때\r\n\r\n- 컴포넌트가 업데이트될 때\r\n=> 특정 props가 바뀔 때\r\n\r\n*/"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE1C,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACrB,MAAMC,KAAK,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE1BC,SAAS,CAAG,MAAM;IAChB;IACA,OAAM,MAAM;MACZ;IACA,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAS,SAAS,EAAG,WAAUE,KAAK,CAACE,IAAK,EAAE;IAAC,GAAG,EAAED,KAAM;IAAA,wBACtD;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB;QAAA,UAAKD,KAAK,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,EACpBF,KAAK,CAACG,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,GAnBQJ,MAAM;AAAA,KAANA,MAAM;AAoBf,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA"},"metadata":{},"sourceType":"module"}