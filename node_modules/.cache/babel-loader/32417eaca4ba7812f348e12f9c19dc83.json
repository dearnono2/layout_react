{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YS\\\\Desktop\\\\\\uB514\\uCF54\\uB4DC \\uCEF4\\uD4E8\\uD130\\uD559\\uC6D0\\\\221013 17\\uC77C\\uCC28\\\\layout_react\\\\src\\\\components\\\\common\\\\Popup.js\",\n  _s = $RefreshSig$();\n// popup은 사이트 내의 팝업 부분의 모션에 영향을 준다.\n\nimport { useState, forwardRef, useEffect, useImperativeHandle } from \"react\";\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [Open, setOpen] = useState(false);\n  useImperativeHandle(ref, () => {\n    return {\n      open: () => setOpen(true)\n    };\n  });\n\n  // useEffect(() => {\n  //   document.body.style.overflow = 'hidden';\n  //   return() => {\n  //     document.body.style.overflow = 'auto';\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    Open ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'auto';\n  }, [Open]);\n  return (\n    /*#__PURE__*/\n    // 모션을 걸고 싶은 요소를 AnimatePresence로 감싸준다. 그리고 모션을 걸 요소의 앞에 motion. 을 붙여준다.\n    // initial에 \n    _jsxDEV(AnimatePresence, {\n      children: Open && /*#__PURE__*/_jsxDEV(motion.aside, {\n        className: \"pop\",\n        initial: {\n          opacity: 0,\n          scale: 0\n        },\n        animate: {\n          opacity: 1,\n          scale: 1,\n          transition: {\n            duration: 1\n          }\n        },\n        exit: {\n          opacity: 0,\n          scale: 0,\n          transition: {\n            duration: 0.5\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"con\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n          initial: {\n            x: 50,\n            opacity: 0\n          },\n          animate: {\n            x: 0,\n            opacity: 1,\n            transition: {\n              delay: 1\n            }\n          },\n          className: \"close\",\n          onClick: () => {\n            setOpen(false);\n          },\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n}, \"KSqEdPYRQB1G3RfB844xqECotSE=\")), \"KSqEdPYRQB1G3RfB844xqECotSE=\");\n_c2 = Popup;\nexport default Popup;\n\n/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"Popup$forwardRef\");\n$RefreshReg$(_c2, \"Popup\");","map":{"version":3,"names":["useState","forwardRef","useEffect","useImperativeHandle","motion","AnimatePresence","Popup","props","ref","Open","setOpen","open","document","body","style","overflow","opacity","scale","transition","duration","children","x","delay"],"sources":["C:/Users/YS/Desktop/디코드 컴퓨터학원/221013 17일차/layout_react/src/components/common/Popup.js"],"sourcesContent":["// popup은 사이트 내의 팝업 부분의 모션에 영향을 준다.\r\n\r\nimport { useState, forwardRef, useEffect, useImperativeHandle } from \"react\";\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\n\r\nconst Popup = forwardRef((props, ref) => {\r\n\r\n  const [Open, setOpen] = useState(false);\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      open: () => setOpen(true),\r\n    };\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   document.body.style.overflow = 'hidden';\r\n  //   return() => {\r\n  //     document.body.style.overflow = 'auto';\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    Open ? (document.body.style.overflow = 'hidden')\r\n        : (document.body.style.overflow = 'auto');\r\n  }, [Open]);\r\n  \r\n  return(\r\n    // 모션을 걸고 싶은 요소를 AnimatePresence로 감싸준다. 그리고 모션을 걸 요소의 앞에 motion. 을 붙여준다.\r\n    // initial에 \r\n    <AnimatePresence>\r\n      {Open && (\r\n        <motion.aside className=\"pop\" \r\n          initial={{ opacity: 0, scale: 0, }} \r\n          animate={{ opacity: 1, scale: 1, transition: { duration: 1 } }} \r\n          exit={{ opacity: 0, scale: 0, transition: { duration: 0.5 } }}>\r\n          <div className=\"con\">{props.children}</div>\r\n          <motion.span\r\n            initial={{ x: 50, opacity: 0 }}\r\n            animate={{ x: 0, opacity: 1, transition: { delay: 1 } }}\r\n            className=\"close\" onClick={() => { setOpen(false) }}>close</motion.span>\r\n        </motion.aside>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n});\r\n\r\n\r\nexport default Popup;\r\n\r\n/*\r\n\r\nforwardRef\r\n단계1 - 기존의 컴포넌트 함수를 popup이라는 컴포넌트 함수를 대입형(선언형을 대입형으로 전환해줘야한다.)\r\n\r\n단계2 - 해당 화살표 함수를 forwordRef로 감싸고 인수로 전달한다. \r\n\r\n단계3 - 화살표 함수(forwardRef로 전달되는) 두번째 인수로 ref 추가\r\n\r\n단계4 - fowardRef 안쪽에 useImperativeHandle 함수를 호출한다. \r\n\r\n단계5 - 해당함수를 객체를 반환해서 해당객체값을 부모 컴포넌트로 전달\r\n\r\n단계6 - 부모컴포넌트에 useRef로 forwardRef로 전달되는 자식 컴포넌트를 참조한다. \r\n\r\n단계7 - \r\n\r\n*/"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,mBAAmB,QAAQ,OAAO;AAC5E,SAAQC,MAAM,EAAEC,eAAe,QAAO,eAAe;AAAC;AAEtD,MAAMC,KAAK,iCAAGL,UAAU,SAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAAA;EAEvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvCG,mBAAmB,CAACK,GAAG,EAAE,MAAM;IAC7B,OAAO;MACLG,IAAI,EAAE,MAAMD,OAAO,CAAC,IAAI;IAC1B,CAAC;EACH,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;;EAEAR,SAAS,CAAC,MAAM;IACdO,IAAI,GAAIG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ,GACxCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAO;EAC/C,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV;IAAA;IACE;IACA;IACA,QAAC,eAAe;MAAA,UACbA,IAAI,iBACH,QAAC,MAAM,CAAC,KAAK;QAAC,SAAS,EAAC,KAAK;QAC3B,OAAO,EAAE;UAAEO,OAAO,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAG,CAAE;QACnC,OAAO,EAAE;UAAED,OAAO,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAE;QAAE,CAAE;QAC/D,IAAI,EAAE;UAAEH,OAAO,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI;QAAE,CAAE;QAAA,wBAC9D;UAAK,SAAS,EAAC,KAAK;UAAA,UAAEZ,KAAK,CAACa;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO,eAC3C,QAAC,MAAM,CAAC,IAAI;UACV,OAAO,EAAE;YAAEC,CAAC,EAAE,EAAE;YAAEL,OAAO,EAAE;UAAE,CAAE;UAC/B,OAAO,EAAE;YAAEK,CAAC,EAAE,CAAC;YAAEL,OAAO,EAAE,CAAC;YAAEE,UAAU,EAAE;cAAEI,KAAK,EAAE;YAAE;UAAE,CAAE;UACxD,SAAS,EAAC,OAAO;UAAC,OAAO,EAAE,MAAM;YAAEZ,OAAO,CAAC,KAAK,CAAC;UAAC,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB;MAAA;QAAA;QAAA;QAAA;MAAA;IAE7E;MAAA;MAAA;MAAA;IAAA;EACe;AAEtB,CAAC,kCAAC;AAAC,MAvCGJ,KAAK;AA0CX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}